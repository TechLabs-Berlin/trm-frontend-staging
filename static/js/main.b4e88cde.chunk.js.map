{"version":3,"sources":["config.js","dataProvider.js","authProvider.js","i18nProvider.js","features/csv-import/input.js","features/csv-import/changesListField.js","features/csv-import/list.js","features/csv-import/apply.js","features/csv-import/page.js","customRoutes.js","static/techlabs-logo.svg","login.js","theme.js","static/techlabs-icon-white.svg","components/trmAppBar.js","components/trmSubMenu.js","components/trmMenu.js","components/trmLayout.js","fields/stateSelect.js","inputs/stateSelect.js","fields/trackSelect.js","inputs/trackSelect.js","components/buttons/bulkUpdateTechieState.js","components/buttons/bulkUpdateAssignedTeamMember.js","fields/formResponseAnswers.js","techies.js","fields/formTypeSelect.js","fields/relativeTime.js","inputs/formTypeSelect.js","forms.js","fields/termSelect.js","inputs/termSelect.js","semesters.js","fields/json.js","form_responses.js","team_members.js","App.js","serviceWorker.js","index.js"],"names":["clientId","hostedDomain","hasuraProvider","hasToken","localStorage","getItem","buildProvider","token","client","ApolloClient","headers","uri","config","buildFieldsCustom","type","res","buildFields","name","push","gqlTypes","buildQuery","buildQueryFactory","buildVariables","iR","buildGqlQuery","buildMetaArgs","buildArgs","buildApolloArgs","getResponseParser","buildHasuraProvider","a","Promise","reject","authProvider","login","code","request","Request","method","body","JSON","stringify","Headers","fetch","then","response","status","Error","statusText","json","setItem","logout","removeItem","resolve","checkAuth","args","checkError","err","console","log","getPermissions","role","messages","trm","menu","techies","applications","academy","csvImport","settings","resources","fields","first_name","last_name","techie_key","application_track_choice","google_account","github_handle","edyoucated_handle","linkedin_profile_url","forms","form_id","imports_techies","form_responses","team_members","semesters","englishMessages","polyglotI18nProvider","useStyles","makeStyles","theme","validationStatus","marginTop","spacing","validationErrors","Input","csv","validation","onUpdateCSV","classes","Grid","container","item","sm","md","xl","Paper","square","elevation","TextField","label","multiline","fullWidth","rows","variant","onChange","event","target","value","Typography","className","valid","style","verticalAlign","marginRight","color","Object","entries","errors","map","field","key","join","ChangesListField","record","changes","reduce","acc","attribute","newValue","attributes","oldValue","List","records","isReady","React","page","setPage","ListContextProvider","data","ids","keys","total","length","perPage","currentSort","order","basePath","resource","selectedIds","Datagrid","source","Pagination","Loading","resultContainer","padding","width","updateStats","marginBottom","failedList","listStylePosition","Apply","isUpdateRunning","numPending","values","filter","r","updateState","numSuccessful","failedEmails","email","message","updateError","align","CircularProgress","fontSize","button","actionsContainer","resetContainer","runChunkedPromise","xs","f","n","Infinity","finished","Symbol","promises","slice","others","race","promise","splice","csvSchema","notes","age","state","validValues","includes","track","application_successful","gender","validate","parseCSV","columns","skip_empty_lines","delimiter","result","attr","validateResult","CSVImportPage","activeStep","setActiveStep","setCSV","setValidation","dataProvider","useDataProvider","setRecords","setReady","setUpdateRunning","steps","newRecords","id","emails","getList","techie","fetchTechies","doUpdate","update","catch","error","handleNext","prevActiveStep","handleBack","Card","Title","title","CardContent","Stepper","orientation","index","Step","StepLabel","StepContent","step","getStepContent","Button","disabled","onClick","exact","path","component","_extends","assign","i","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","props","viewBox","ref","undefined","ForwardRef","forwardRef","LoginPaper","styled","loginTheme","createMuiTheme","palette","background","default","GREY","typography","fontFamily","root","position","left","top","transform","centeredBlock","centeredText","LoginPage","notify","useNotify","useLogin","responseGoogle","ThemeProvider","CssBaseline","Notification","alt","scope","responseType","onSuccess","onFailure","cookiePolicy","primary","main","overrides","RaMenuItemLink","borderLeft","active","MuiAppBar","colorSecondary","backgroundColor","height","logo","flex","textOverflow","whiteSpace","overflow","spacer","TRMAppBar","AppBar","icon","minWidth","sidebarIsOpen","paddingLeft","transition","sidebarIsClosed","TRMSubMenu","handleToggle","isOpen","children","dense","translate","useTranslate","header","MenuItem","ListItemIcon","Tooltip","placement","Collapse","in","timeout","unmountOnExit","disablePadding","TRMMenu","onMenuClick","useState","menuTechies","menuSettings","setState","isXSmall","useMediaQuery","breakpoints","down","open","useSelector","admin","ui","sidebarOpen","MenuItemLink","to","primaryText","smart_count","leftIcon","pathname","hash","TRMLayout","Layout","appBar","StateSelectField","SelectField","choices","defaultProps","addLabel","StateSelectInput","SelectInput","TrackSelectField","TrackSelectInput","BulkUpdateTechieStateButton","setOpen","techieState","setTechieState","refresh","useRefresh","unselectAll","useUnselectAll","handleDialogClose","useUpdateMany","updateMany","Dialog","onClose","DialogTitle","DialogContent","SimpleForm","toolbar","DialogActions","BulkUpdateAssignedTeamMemberButton","assignedTeamMemberID","setAssignedTeamMemberID","assigned_team_member_id","ReferenceInput","reference","optionText","FormResponseAnswersField","sortedAnswers","answers","answer","sort","b","text","split","v","href","ListItem","ListItemText","secondary","TechieFilter","Filter","TextInput","alwaysOn","TechieBulkActionButtons","TechieList","location","bulkActionButtons","filters","rowClick","ReferenceField","BooleanField","TechieEditToolbar","Toolbar","SaveButton","TechieTitle","TechieEdit","applicationForm","setApplicationForm","getManyReference","find","form","form_type","Edit","TabbedForm","FormTab","allowEmpty","NumberInput","NullableBooleanInput","displayNull","ReferenceManyField","FormTypeSelectField","RelativeTimeField","fromNow","FormTypeSelectInput","FormFilter","FormList","FormTitle","description","FormEdit","DateField","showTime","FormCreate","Create","TermSelectField","TermSelectInput","SemesterList","SemesterTitle","SemesterEdit","DateInput","SemesterCreate","JSONField","src","collapsed","collapseStringsAfterLength","FormResponseFilter","FormResponseList","FormResponseTitle","FormResponseShow","Show","SimpleShowLayout","TeamMemberList","TeamMemberTitle","TeamMemberEdit","TeamMemberCreate","App","Admin","i18nProvider","customRoutes","loginPage","layout","Resource","list","edit","create","show","Component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4e88cde.chunk.js","sourcesContent":["export default {\n  graphqlApiURL: 'https://trm-staging-hasura-xwaitoan6a-ew.a.run.app/v1/graphql',\n  authFnURL: 'https://europe-west3-techlabs-trm-test.cloudfunctions.net/trm-auth-staging',\n  oAuth: {\n    clientId: '982186032389-28u4o2ui0up26vtp6ajp4ce7kqd69p7v.apps.googleusercontent.com',\n    hostedDomain: 'techlabs.org'\n  }\n}\n","import ApolloClient from 'apollo-boost'\nimport buildHasuraProvider from 'ra-data-hasura-graphql/src'\n// import buildDataProvider from 'ra-data-hasura-graphql';\nimport {\n  buildQueryFactory\n} from 'ra-data-hasura-graphql/src/buildQuery';\nimport buildVariables from 'ra-data-hasura-graphql/src/buildVariables';\nimport {\n  buildGqlQuery,\n  buildFields,\n  buildMetaArgs,\n  buildArgs,\n  buildApolloArgs,\n} from 'ra-data-hasura-graphql/src/buildGqlQuery';\nimport getResponseParser from 'ra-data-hasura-graphql/src/getResponseParser';\nimport * as gqlTypes from 'graphql-ast-types-browser';\n\nimport config from './config'\n\nlet hasuraProvider = null\n\nconst hasToken = () => localStorage.getItem('token') !== null\n\nconst buildProvider = () => {\n  const token = localStorage.getItem('token')\n  const client = new ApolloClient({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    },\n    uri: config.graphqlApiURL,\n  })\n  const buildFieldsCustom = (type) => {\n    let res = buildFields(type);\n    if (type.name === 'form_responses') {\n        // here we add additional fields we want to query for apps.\n        // we are using the graphql-ast-types functions which is ast representation for graphql\n        res.push(\n            gqlTypes.field(\n                gqlTypes.name('form'),\n                null,\n                null,\n                null,\n                gqlTypes.selectionSet([\n                    gqlTypes.field(gqlTypes.name('form_type')),\n                    gqlTypes.field(gqlTypes.name('description')),\n                ])\n            )\n        );\n        res.push(\n          gqlTypes.field(\n              gqlTypes.name('techie'),\n              null,\n              null,\n              null,\n              gqlTypes.selectionSet([\n                  gqlTypes.field(gqlTypes.name('first_name')),\n                  gqlTypes.field(gqlTypes.name('last_name')),\n              ])\n          )\n      );\n    }\n    return res;\n  };\n  const buildGqlQueryCustom = (iR) =>\n    buildGqlQuery(\n      iR,\n      buildFieldsCustom,\n      buildMetaArgs,\n      buildArgs,\n      buildApolloArgs\n    );\n  const buildQuery = buildQueryFactory(\n    buildVariables,\n    buildGqlQueryCustom,\n    getResponseParser\n  );\n  return buildHasuraProvider({\n    client,\n    buildQuery\n  })\n}\n\nexport default async (...args) => {\n  if (hasuraProvider === null && hasToken()) {\n    hasuraProvider = await buildProvider()\n  }\n  if (hasuraProvider !== null) {\n    return hasuraProvider(...args)\n  }\n  return Promise.reject('not logged in')\n}\n","import config from './config'\n\nconst authProvider = {\n  login: ({ code }) =>  {\n      const request = new Request(config.authFnURL, {\n          method: 'POST',\n          body: JSON.stringify({ code }),\n          headers: new Headers({ 'Content-Type': 'application/json' }),\n      });\n      return fetch(request)\n          .then(response => {\n              if (response.status < 200 || response.status >= 300) {\n                  throw new Error(response.statusText);\n              }\n              return response.json();\n          })\n          .then(({ token }) => {\n              localStorage.setItem('token', token);\n          });\n  },\n  logout: () => {\n    localStorage.removeItem('token')\n    return Promise.resolve()\n  },\n  checkAuth: (args) => {\n    return localStorage.getItem('token') ? Promise.resolve() : Promise.reject()\n  },\n  checkError: (err) => {\n    console.log(`checkError: ${err}`)\n    return Promise.resolve()\n  },\n  getPermissions: () => {\n    const role = localStorage.getItem('permissions');\n    return role ? Promise.resolve(role) : Promise.reject();\n  }\n};\n\nexport default authProvider;\n","import englishMessages from 'ra-language-english';\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\n\nlet messages = {\n  trm: {\n    menu: {\n      techies: 'Techies',\n      applications: 'Applications',\n      academy: 'Academy',\n      csvImport: 'CSV Import',\n      settings: 'Settings'\n    }\n  },\n  resources: {\n    techies: {\n      name: 'Techie |||| Techies',\n      fields: {\n        first_name: 'First Name',\n        last_name: 'Last Name',\n        techie_key: 'Techie Key',\n        application_track_choice: 'Application Track Choice',\n        google_account: 'Google Account',\n        github_handle: 'GitHub Handle',\n        edyoucated_handle: 'edyoucated Handle',\n        linkedin_profile_url: 'LinkedIn Profile URL'\n      }\n    },\n    forms: {\n      name: 'Form |||| Forms',\n      fields: {\n        form_id: 'Typeform Form ID',\n        imports_techies: 'Imports Techies?'\n      }\n    },\n    form_responses: {\n      name: 'Form Response |||| Form Responses',\n      fields: {\n        'form.description': 'Form',\n        'techie.first_name': 'First Name',\n        'techie.last_name': 'Last Name'\n      }\n    },\n    team_members: {\n      name: 'Team Member |||| Team Members',\n      fields: {\n        first_name: 'First Name',\n        last_name: 'Last Name',\n      }\n    },\n    semesters: {\n      name: 'Semester |||| Semesters'\n    }\n  },\n  ...englishMessages\n};\n\nexport default polyglotI18nProvider(() => messages)\n","import * as React from \"react\";\n\nimport {\n  Paper,\n  TextField,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core'\n\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\nconst useStyles = makeStyles((theme) => ({\n  validationStatus: {\n    marginTop: theme.spacing(2)\n  },\n  validationErrors: {\n    marginTop: theme.spacing(1)\n  }\n}))\n\nconst Input = ({ csv, validation, onUpdateCSV }) => {\n  const classes = useStyles()\n  const onChange = event => onUpdateCSV(event.target.value)\n  return (\n    <Grid container spacing={3}>\n      <Grid item sm={12} md={12} xl={8}>\n        <Paper square elevation={0}>\n          <TextField\n            label=\"CSV\"\n            multiline\n            fullWidth\n            rows={10}\n            variant=\"outlined\"\n            onChange={onChange}\n            value={csv}\n          />\n          <Typography className={classes.validationStatus}>\n            {validation.valid ? (\n              <Typography variant='body1'>\n                <CheckCircleOutlineIcon style={{ verticalAlign: 'top', marginRight: '5px'}}/>\n                CSV is <strong>valid</strong>.\n              </Typography>\n            ) : (\n              <div>\n                <Typography variant='body1' color='secondary'>\n                  <ErrorOutlineIcon style={{ verticalAlign: 'top', marginRight: '5px'}}/>\n                  CSV is <strong>invalid</strong>.\n                </Typography>\n                <ul className={classes.validationErrors}>\n                  {Object.entries(validation.errors).map(([field, errors]) => {\n                    return (\n                      <li key={field}>\n                        <strong>{field}</strong>: {errors.join(', ')}\n                      </li>\n                    )\n                  })}\n                </ul>\n              </div>\n            )}\n          </Typography>\n        </Paper>\n      </Grid>\n      <Grid item sm={12} md={12} xl={4}>\n        <Typography variant='h5'>Documentation</Typography>\n        <Typography variant='body1'>\n          <p>\n            Techies are identified by their <strong>email</strong>.\n            <br/>\n            Enter CSV in the text field with <strong>separator \";\"</strong>.\n          </p>\n        </Typography>\n        <Typography variant='body1'>\n          <p>\n            The <strong>email</strong> field is always needed to identify Techies.\n            You can update the following attributes:\n            <ul>\n              <li><strong>first_name</strong></li>\n              <li><strong>last_name</strong></li>\n              <li><strong>notes</strong></li>\n              <li><strong>google_account</strong></li>\n              <li><strong>github_handle</strong></li>\n              <li><strong>edyoucated_handle</strong></li>\n              <li><strong>linkedin_profile_url</strong></li>\n              <li><strong>age</strong></li>\n              <li><strong>state</strong>: one of <i>PROSPECT</i>, <i>APPLICANT</i>, <i>REJECTED</i>, <i>LEARNER</i>, <i>DROPPED</i>, or <i>ALUMNI</i></li>\n              <li><strong>track</strong>: one of <i>DS</i>, <i>AI</i>, <i>WEBDEV</i>, or <i>UX</i></li>\n              <li><strong>application_successful</strong>: <i>0</i> or <i>1</i></li>\n              <li><strong>gender</strong>: one of <i>male</i>, or <i>female</i></li>\n            </ul>\n          </p>\n        </Typography>\n      </Grid>\n    </Grid>\n\n  )\n}\n\nexport default Input\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const ChangesListField = ({ record = {}}) => {\n  const changes = Object.entries(record.changes).reduce((acc, [attribute, newValue]) => {\n    if(!record.attributes) {\n      return acc\n    }\n    let oldValue = <i>None</i>\n    if(record.attributes && (attribute in record.attributes)) {\n      oldValue = <React.Fragment>{record.attributes[attribute]}</React.Fragment>\n    }\n    acc.push(<li key={attribute}>{attribute}: {oldValue} → {newValue}</li>)\n    return acc\n  }, [])\n  return (\n    <ul>{changes}</ul>\n  )\n}\n\nChangesListField.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n","import * as React from \"react\"\n\nimport {\n  ListContextProvider,\n  Datagrid,\n  TextField,\n  Pagination,\n  Loading\n} from 'react-admin'\n\nimport { ChangesListField } from './changesListField'\n\nconst List = ({ records, isReady }) => {\n  const [page, setPage] = React.useState(1)\n  const perPage = 25\n\n  if(!isReady) {\n    return <Loading />\n  }\n\n  return (\n      <ListContextProvider value={{\n              data: records,\n              ids: Object.keys(records),\n              total: Object.keys(records).length,\n              page,\n              perPage,\n              setPage,\n              currentSort: { field: 'id', order: 'ASC' },\n              basePath: \"/posts\", // TODO remove, but throws an error\n              resource: 'posts', // TODO remove, but throws an error\n              selectedIds: []\n      }}>\n          <Datagrid>\n              <TextField source=\"state\" />\n              <TextField source=\"id\" />\n              <ChangesListField source=\"changes\" />\n          </Datagrid>\n          <Pagination />\n      </ListContextProvider >\n  )\n}\n\nexport default List\n","import * as React from \"react\";\n\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  resultContainer: {\n    padding: theme.spacing(2),\n    width: '400px'\n  },\n  updateStats: {\n    '&:first-child': {\n      marginTop: theme.spacing(2)\n    },\n    '&:not(:last-child)': {\n      marginBottom: theme.spacing(2)\n    }\n  },\n  failedList: {\n    marginTop: 0,\n    listStylePosition: 'inside'\n  }\n}))\n\nconst Apply = ({ records, isUpdateRunning }) => {\n  const classes = useStyles()\n  const numPending = Object.values(records).filter(r => r.updateState === 'PENDING').length\n  const numSuccessful = Object.values(records).filter(r => r.updateState === 'SUCCESSFUL').length\n  const failedEmails = Object.entries(records).reduce((acc, [email, record]) => {\n    if(record.updateState === 'FAILED') {\n      let message = email\n      if('updateError' in record) {\n        message += ': ' + record.updateError\n      }\n      acc.push(message)\n    }\n    return acc\n  }, [])\n\n  return (\n    <Paper square elevation={2} className={classes.resultContainer}>\n      {isUpdateRunning ? (\n        <Typography variant='h4' align='center' color='secondary'>\n          <CircularProgress style={{ verticalAlign: 'top', marginRight: '10px' }}/>\n          Update running…\n        </Typography>\n      ) : (\n        <Typography variant='h4' align='center' color='secondary'>\n          <CheckCircleOutlineIcon fontSize={'large'} style={{ verticalAlign: 'top', marginRight: '10px' }} />\n          Update finished.\n        </Typography>\n      )}\n      <div>\n        <Typography align='center' className={classes.updateStats}><strong>Pending Updates:</strong> {numPending}</Typography>\n        <Typography align='center' className={classes.updateStats}><strong>Successful Updates:</strong> {numSuccessful}</Typography>\n        <Typography align='center' className={classes.updateStats}>\n          <strong>Failed Updates:</strong>\n          {failedEmails.length === 0 ? ' None' : (<ul className={classes.failedList}>\n            {failedEmails.map((email) => {\n              return <li key={email}>{email}</li>\n            })}\n          </ul>)}\n        </Typography>\n      </div>\n    </Paper>\n  )\n}\n\nexport default Apply\n","import * as React from \"react\";\n\nimport {\n  Title,\n  useDataProvider\n} from 'react-admin';\n\nimport parseCSV from 'csv-parse/lib/sync'\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\n\nimport CSVImportInput from './input'\nimport CSVImportList from './list'\nimport CSVImportApply from './apply'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction getSteps() {\n  return ['Enter CSV Data', 'Verify Changes', 'Apply Changes'];\n}\n\nfunction getStepContent(step, csv, onUpdateCSV, records, isReady, isUpdateRunning, validation) {\n  switch (step) {\n    case 0:\n      return <CSVImportInput csv={csv} onUpdateCSV={onUpdateCSV} validation={validation} />\n    case 1:\n      return <CSVImportList records={records} isReady={isReady} />;\n    case 2:\n      return <CSVImportApply records={records} isUpdateRunning={isUpdateRunning} />\n    default:\n      return 'Unknown step';\n  }\n}\n\n// https://gist.github.com/alexpsi/43dd7fd4d6a263c7485326b843677740\nconst runChunkedPromise = async (xs, f, n=Infinity) => {\n\tconst finished = Symbol();\n\tlet promises = xs.slice(0, n).map(f), others = xs.slice(n);\n\twhile (promises.length) {\n\t\tawait Promise.race(promises.map(promise => promise.then(() => {promise[finished] = true;})));\n\t\tpromises = promises.filter(promise => !promise[finished]);\n\t\tpromises.push(...others.splice(0, n - promises.length).map(f));\n  }\n};\n\nconst csvSchema = {\n  email: () => {return []},\n  first_name: () => {return []},\n  last_name: () => {return []},\n  notes: () => {return []},\n  google_account: () => {return []},\n  github_handle: () => {return []},\n  edyoucated_handle: () => {return []},\n  linkedin_profile_url: () => {return []},\n  age: () => {return []},\n  state: (value) => {\n    const validValues = ['PROSPECT', 'APPLICANT', 'LEARNER', 'DROPPED', 'ALUMNI']\n    if(!validValues.includes(value)) {\n      return [`${value} not in ${validValues.join(', ')}`]\n    }\n    return []\n  },\n  track: (value) => {\n    const validValues = ['DS', 'AI', 'WEBDEV', 'UX']\n    if(!validValues.includes(value)) {\n      return [`${value} not in ${validValues.join(', ')}`]\n    }\n    return []\n  },\n  application_successful: (value) => {\n    const validValues = ['0', '1']\n    if(!validValues.includes(value)) {\n      return [`${value} not in ${validValues.join(', ')}`]\n    }\n    return []\n  },\n  gender: (value) => {\n    const validValues = ['male', 'female']\n    if(!validValues.includes(value)) {\n      return [`${value} not in ${validValues.join(', ')}`]\n    }\n    return []\n  },\n}\n\nconst validate = (csv) => {\n  let records\n  try {\n    records = parseCSV(csv, {\n      columns: true,\n      skip_empty_lines: true,\n      delimiter: ';'\n    })\n  } catch(err) {\n    return {\n      valid: false,\n      errors: {\n        csv: [err]\n      }\n    }\n  }\n\n  if(records.length === 0) {\n    return {\n      valid: false,\n      errors: {\n        csv: ['must have at least one line']\n      }\n    }\n  }\n\n  if(!('email' in records[0])) {\n    return {\n      valid: false,\n      errors: {\n        email: ['attribute must exist to identify Techies']\n      }\n    }\n  }\n\n  const result = {\n    valid: true,\n    errors: {}\n  }\n\n  // Run validators\n  for(const [attr, validate] of Object.entries(csvSchema)) {\n    if(!(attr in records[0])) {\n      continue\n    }\n    for(const record of records) {\n      const validateResult = validate(record[attr])\n      if(validateResult.length > 0) {\n        result.valid = false\n        if(!(attr in result.errors)) {\n          result.errors[attr] = []\n        }\n        result.errors[attr].push(validateResult)\n      }\n    }\n  }\n\n  // Check for extra attributes\n  for(const attr of Object.keys(records[0])) {\n    if(!Object.keys(csvSchema).includes(attr)) {\n      result.valid = false\n      result.errors[attr] = ['is unsupported']\n    }\n  }\n  return result\n}\n\nconst CSVImportPage = () => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [csv, setCSV] = React.useState('email;state\\nsome.techie@gmail.com;LEARNER')\n  const [validation, setValidation] = React.useState(validate(csv))\n  const dataProvider = useDataProvider()\n  const [records, setRecords] = React.useState({})\n  const [isReady, setReady] = React.useState(false)\n  const [isUpdateRunning, setUpdateRunning] = React.useState(false)\n  const steps = getSteps();\n\n  React.useEffect(() => {\n    const validation = validate(csv)\n    setValidation(validation)\n    if(!validation.valid) {\n      return\n    }\n\n    const rawRecords = parseCSV(csv, {\n      columns: true,\n      skip_empty_lines: true,\n      delimiter: ';'\n    })\n    const newRecords = rawRecords.reduce((acc, r) => {\n      const {email, ...changes} = r\n      acc[email] = {\n        id: email,\n        state: 'NOT_FOUND',\n        updateState: 'PENDING',\n        changes\n      }\n      return acc\n    }, {})\n\n    const fetchTechies = async () => {\n      const emails = Object.keys(newRecords)\n      const response = await dataProvider.getList('techies', { filter: { email: emails } })\n      for(const techie of response.data) {\n        if(!(techie.email in newRecords)) {\n          continue\n        }\n        newRecords[techie.email].state = 'FOUND'\n        newRecords[techie.email].attributes = techie\n      }\n      setRecords(newRecords)\n      setReady(true)\n    }\n    fetchTechies()\n  }, [csv, dataProvider])\n\n  const doUpdate = React.useCallback(() => {\n    const singleUpdate = ([email, record]) => {\n      if(record.state !== 'FOUND' || !('attributes' in record)) {\n        record.updateState = 'FAILED'\n        records[email] = record\n        setRecords(records)\n        return Promise.resolve()\n      }\n      return dataProvider.update('techies', {\n        id: record.attributes.id,\n        data: record.changes\n      }).then(() => {\n        record.updateState = 'SUCCESSFUL'\n        records[email] = record\n        setRecords(records)\n      }).catch(err => {\n        record.updateState = 'FAILED'\n        record.updateError = err\n        records[email] = record\n        setRecords(records)\n      })\n    }\n    setUpdateRunning(true)\n    runChunkedPromise(Object.entries(records), singleUpdate, 5).then(() => {\n      setUpdateRunning(false)\n    }).catch(err => console.error(err))\n  }, [records, dataProvider])\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  React.useEffect(() => {\n    if(activeStep === 2) {\n      doUpdate()\n    }\n  }, [activeStep, doUpdate])\n\n  return (\n    <Card>\n        <Title title=\"CSV Import\" />\n        <CardContent>\n          <Stepper activeStep={activeStep} orientation=\"vertical\">\n            {steps.map((label, index) => (\n              <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                  <StepContent>\n                  {getStepContent(index, csv, setCSV, records, isReady, isUpdateRunning, validation)}\n                  <div className={classes.actionsContainer}>\n                      {activeStep <= steps.length - 2 ? (\n                        <React.Fragment>\n                          <Button\n                              disabled={activeStep === 0}\n                              onClick={handleBack}\n                              className={classes.button}\n                          >\n                              Back\n                          </Button>\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleNext}\n                            className={classes.button}\n                            disabled={!validation.valid}\n                          >\n                            Next\n                          </Button>\n                        </React.Fragment>\n                      ) : ''}\n                    </div>\n                  </StepContent>\n              </Step>\n            ))}\n          </Stepper>\n        </CardContent>\n    </Card>\n  );\n}\n\nexport default CSVImportPage;\n","import * as React from \"react\";\nimport { Route } from 'react-router-dom';\nimport CSVImportPage from './features/csv-import/page';\n\nexport default [\n    <Route exact path=\"/csv-import\" component={CSVImportPage} />\n];\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#fb1d5c;}.cls-2{fill:#454545;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"title\", null, \"tl-logo\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_2\",\n  \"data-name\": \"Layer 2\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_1-2\",\n  \"data-name\": \"Layer 1\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  id: \"arrow\",\n  className: \"cls-1\",\n  d: \"M0,92.81V78A5.82,5.82,0,0,1,.84,75a6.61,6.61,0,0,1,2.74-2.39L33.73,56.9a40,40,0,0,1,8.54-3c-1.6-.4-3.11-.84-4.52-1.3a26.51,26.51,0,0,1-4-1.72L3.58,35.26A6.61,6.61,0,0,1,.84,32.87,5.83,5.83,0,0,1,0,29.8V15L65.77,49.7v8.38Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"point\",\n  className: \"cls-1\",\n  d: \"M75.4,88.33a13.29,13.29,0,0,1,.95-5,12.09,12.09,0,0,1,2.65-4,13.24,13.24,0,0,1,4-2.7,12.38,12.38,0,0,1,5-1,12.23,12.23,0,0,1,4.9,1,12.44,12.44,0,0,1,4,2.7,12.25,12.25,0,0,1,2.65,4,12.48,12.48,0,0,1,1,5,12.32,12.32,0,0,1-1,5,13.24,13.24,0,0,1-2.65,4,12.16,12.16,0,0,1-4,2.65,12.56,12.56,0,0,1-4.9,1,12.83,12.83,0,0,1-5-1,12.6,12.6,0,0,1-4-2.65,11.47,11.47,0,0,1-2.65-4A13.2,13.2,0,0,1,75.4,88.33Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M178,17.2H145.45V0h84.44V17.2H197.35v83.15H178Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M240.74,71.25c1.18,8.74,8.95,15,21.55,15,6.6,0,15.25-2.44,19.36-6.59l11.43,11C285.46,98.49,273,102.21,262,102.21c-24.92,0-39.73-15-39.73-37.7,0-21.5,14.95-37,38.41-37,24.19,0,39.29,14.63,36.51,43.73ZM280,56.77C278.86,47.59,271.53,43,261.27,43c-9.68,0-17.6,4.58-20.23,13.76Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M373.72,91.32c-8.36,8-17.16,11.18-27.86,11.18-21,0-38.41-12.33-38.41-37.42s17.45-37.41,38.41-37.41c10.26,0,18.18,2.87,26.1,10.46L360.67,49.74a22.27,22.27,0,0,0-14.52-5.59c-12,0-20.81,8.61-20.81,20.93,0,13.48,9.38,20.65,20.52,20.65,5.72,0,11.44-1.58,15.83-5.88Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M403.77,0V39.28c6.45-8.17,14.37-10.61,22.58-10.61,20.52,0,29.61,13.62,29.61,34.41v37.27H438.08V63.22c0-12.9-6.89-18.35-16.42-18.35-10.56,0-17.89,8.75-17.89,19.35v36.13H385.89V0Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-2\",\n  d: \"M495.26,0V82.86H548v17.49H475.9V0Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-2\",\n  d: \"M617.23,29.67h17.16v70.68H617.53L616.65,90c-4.11,8.31-15.4,12.33-23.46,12.47C571.78,102.64,556,89.74,556,64.94c0-24.37,16.57-37.13,37.68-37,9.68,0,18.91,4.45,23,11.47ZM573.84,64.94c0,13.48,9.53,21.5,21.4,21.5,28.15,0,28.15-42.86,0-42.86C583.37,43.58,573.84,51.47,573.84,64.94Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-2\",\n  d: \"M671.62.14V39.28C675.88,32,687.75,28,695.37,28c21.12,0,36.8,12.62,36.8,37,0,23.22-16,37-37.24,37-8.79,0-17.74-2.87-23.31-11.33l-1.17,9.75H653.74V.14Zm1.18,64.8c0,12.76,9.67,20.79,21,20.79,11.44,0,20.53-8.46,20.53-20.79,0-12.76-9.09-20.64-20.53-20.64C682.47,44.3,672.8,52.61,672.8,64.94Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-2\",\n  d: \"M792.72,48.45c-5.13-4.73-11-6.3-17.89-6.3-8.5,0-13.19,2.58-13.19,7s4.25,7.17,13.49,7.74c13.63.86,30.93,3.87,30.93,22.65,0,12.48-10.41,23.23-31.08,23.23-11.43,0-22.87-1.87-33.43-12.62l8.8-12.47c6.89,7,16.86,9.75,24.92,9.89,6.75.14,13.05-2.58,13.05-7.74,0-4.87-4.1-7.6-14.37-8.17-13.63-1-29.9-5.88-29.9-21.94,0-16.34,17.3-22.07,30.49-22.07,11.29,0,19.79,2.15,28.15,9.32Z\"\n})));\n\nvar SvgTechlabsLogo = function SvgTechlabsLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 806.06 102.79\",\n    ref: svgRef\n  }, props), _ref2, title === undefined ? _ref3 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTechlabsLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/techlabs-logo.60a82074.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from 'react';\nimport { useLogin, useNotify, Notification } from 'react-admin';\nimport { ThemeProvider, makeStyles, styled } from '@material-ui/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport GREY from '@material-ui/core/colors/grey';\nimport { GoogleLogin } from 'react-google-login';\n\nimport config from './config'\nimport { ReactComponent as TechLabsLogo } from './static/techlabs-logo.svg';\n\nconst LoginPaper = styled(Paper)({\n    padding: '30px',\n});\n\nexport const loginTheme = createMuiTheme({\n    palette: {\n      background: {\n        default: GREY[200]\n      }\n    },\n    typography: {\n        fontFamily: ['Nunito Sans', 'Helvetica', 'Arial', 'sans-serif']\n    }\n});\n\nconst useStyles = makeStyles({\n    root: {\n        width: '400px',\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        '-webkit-transform': 'translate(-50%, -50%)',\n        transform: 'translate(-50%, -50%)'\n    },\n    centeredBlock: {\n        'margin-left': 'auto',\n        'margin-right': 'auto'\n    },\n    centeredText: {\n        'text-align': 'center'\n    }\n});\n\n\nconst LoginPage = (props) => {\n    const notify = useNotify();\n    const login = useLogin();\n    const classes = useStyles(props);\n    const responseGoogle = (response) => {\n        if('code' in response) {\n            login({ code: response.code })\n            return\n        }\n        console.error(response)\n        notify('Sign in with Google failed')\n    }\n\n    return (\n        <ThemeProvider theme={loginTheme}>\n            <CssBaseline />\n            <Notification />\n            <div className={classes.root}>\n                <LoginPaper elevation={3} className={classes.centeredText}>\n                    <TechLabsLogo className={classes.centeredBlock} alt=\"TechLabs Logo\" />\n                    <h1 className={classes.centeredText}>Techie Relationship Management</h1>\n                    <GoogleLogin\n                        clientId={config.oAuth.clientId}\n                        hostedDomain={config.oAuth.hostedDomain}\n                        scope=\"profile email https://www.googleapis.com/auth/admin.directory.group.readonly\"\n                        responseType=\"code\"\n                        onSuccess={responseGoogle}\n                        onFailure={responseGoogle}\n                        cookiePolicy={'single_host_origin'}\n                    />\n                </LoginPaper>\n            </div>\n        </ThemeProvider>\n    );\n};\n\nexport default LoginPage;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#fb1d5c'\n    }\n  },\n  typography: {\n    fontFamily: ['Nunito Sans', 'Helvetica', 'Arial', 'sans-serif']\n  },\n  overrides: {\n    RaMenuItemLink: {\n        root: {\n            borderLeft: '3px solid #fff',\n        },\n        active: {\n            borderLeft: '3px solid #fb1d5c',\n        },\n    },\n    MuiAppBar: {\n      colorSecondary: {\n          backgroundColor: '#fb1d5c',\n      },\n    }\n  }\n});\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:none;}.cls-2{fill:#fff;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"title\", null, \"icon_symOnly_p\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_2\",\n  \"data-name\": \"Layer 2\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Ebene_1\",\n  \"data-name\": \"Ebene 1\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"icon_symOnly_p\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"bg\",\n  className: \"cls-1\",\n  width: 512,\n  height: 512\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"arrow\",\n  className: \"cls-2\",\n  d: \"M84.29,377.72V329a19.31,19.31,0,0,1,2.76-10.12c1.84-3.06,4.83-5.67,9-7.89l99.56-51.81a131.56,131.56,0,0,1,28.21-10c-5.29-1.3-10.27-2.76-15-4.29a86,86,0,0,1-13.33-5.67L96.1,187.71c-4.22-2.22-7.21-4.83-9-7.89a19.31,19.31,0,0,1-2.76-10.12V121L301.44,235.39v27.67Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"point\",\n  className: \"cls-2\",\n  d: \"M333.25,362.93a43.31,43.31,0,0,1,3.14-16.33,39.64,39.64,0,0,1,8.74-13.26,43.57,43.57,0,0,1,13.33-8.89,40.91,40.91,0,0,1,16.48-3.3,40.24,40.24,0,0,1,16.18,3.3,42.19,42.19,0,0,1,21.92,55,44.12,44.12,0,0,1-8.74,13.18,40.53,40.53,0,0,1-13.18,8.74,41.57,41.57,0,0,1-16.18,3.22,42.55,42.55,0,0,1-16.48-3.22,42,42,0,0,1-13.33-8.74,38.13,38.13,0,0,1-8.74-13.18A43.22,43.22,0,0,1,333.25,362.93Z\"\n}))));\n\nvar SvgTechlabsIconWhite = function SvgTechlabsIconWhite(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), _ref2, title === undefined ? _ref3 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTechlabsIconWhite, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/techlabs-icon-white.28fe6921.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from \"react\";\nimport { AppBar } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { ReactComponent as TechLabsIconWhite } from '../static/techlabs-icon-white.svg';\n\n\nconst useStyles = makeStyles({\n    logo: {\n        height: '30px',\n        marginRight: '0.5em'\n    },\n    title: {\n        flex: 1,\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n    spacer: {\n        flex: 1,\n    },\n});\n\nconst TRMAppBar = props => {\n    const classes = useStyles();\n    return (\n        <AppBar {...props}>\n            <TechLabsIconWhite className={classes.logo} />\n            <Typography\n                variant=\"h6\"\n                color=\"inherit\"\n                className={classes.title}\n                id=\"react-admin-title\"\n            />\n            <span className={classes.spacer} />\n        </AppBar>\n    );\n};\n\nexport default TRMAppBar;\n","import * as React from 'react';\nimport { Fragment } from 'react';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslate } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n    icon: { minWidth: theme.spacing(5) },\n    sidebarIsOpen: {\n        '& a': {\n            paddingLeft: theme.spacing(4),\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n        },\n    },\n    sidebarIsClosed: {\n        '& a': {\n            paddingLeft: theme.spacing(2),\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n        },\n    },\n}));\n\nconst TRMSubMenu = ({\n    handleToggle,\n    sidebarIsOpen,\n    isOpen,\n    name,\n    icon,\n    children,\n    dense,\n}) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n\n    const header = (\n        <MenuItem dense={dense} button onClick={handleToggle}>\n            <ListItemIcon className={classes.icon}>\n                {isOpen ? <ExpandMore /> : icon}\n            </ListItemIcon>\n            <Typography variant=\"inherit\" color=\"textSecondary\">\n                {translate(name)}\n            </Typography>\n        </MenuItem>\n    );\n\n    return (\n        <Fragment>\n            {sidebarIsOpen || isOpen ? (\n                header\n            ) : (\n                <Tooltip title={translate(name)} placement=\"right\">\n                    {header}\n                </Tooltip>\n            )}\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n                <List\n                    dense={dense}\n                    component=\"div\"\n                    disablePadding\n                    className={\n                        sidebarIsOpen\n                            ? classes.sidebarIsOpen\n                            : classes.sidebarIsClosed\n                    }\n                >\n                    {children}\n                </List>\n            </Collapse>\n        </Fragment>\n    );\n};\n\nexport default TRMSubMenu;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useMediaQuery } from '@material-ui/core';\nimport { useTranslate, MenuItemLink } from 'react-admin';\nimport UserIcon from '@material-ui/icons/People';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport SchoolIcon from '@material-ui/icons/School';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport DescriptionIcon from '@material-ui/icons/Description';\n\nimport SubMenu from './trmSubMenu'\n\nconst TRMMenu = ({ onMenuClick, dense, logout }) => {\n  const [state, setState] = useState({\n      menuTechies: true,\n      menuSettings: false,\n  });\n  const translate = useTranslate();\n  const isXSmall = useMediaQuery((theme) =>\n      theme.breakpoints.down('xs')\n  );\n  const open = useSelector((state) => state.admin.ui.sidebarOpen);\n    useSelector((state) => state.theme); // force rerender on theme change\n  const handleToggle = (menu) => {\n      setState(state => ({ ...state, [menu]: !state[menu] }));\n  };\n  return (\n    <React.Fragment>\n        {' '}\n        <SubMenu\n            handleToggle={() => handleToggle('menuTechies')}\n            isOpen={state.menuTechies}\n            sidebarIsOpen={open}\n            name=\"trm.menu.techies\"\n            icon={<UserIcon />}\n            dense={dense}\n        >\n            <MenuItemLink\n                to={`/techies`}\n                primaryText={'All ' + translate(`resources.techies.name`, {\n                    smart_count: 2,\n                })}\n                leftIcon={<UserIcon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n                exact\n            />\n            <MenuItemLink\n                to={{pathname: `/techies`, hash: 'applications'}}\n                primaryText={translate('trm.menu.applications')}\n                leftIcon={<AssignmentTurnedInIcon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n                exact\n            />\n            <MenuItemLink\n                to={{pathname: `/techies`, hash: 'academy'}}\n                primaryText={translate('trm.menu.academy')}\n                leftIcon={<SchoolIcon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n                exact\n            />\n        </SubMenu>\n        <MenuItemLink\n            to={`/csv-import`}\n            primaryText={translate('trm.menu.csvImport')}\n            leftIcon={<DescriptionIcon />}\n            onClick={onMenuClick}\n            sidebarIsOpen={open}\n            dense={dense}\n            exact\n        />\n        <SubMenu\n            handleToggle={() => handleToggle('menuSettings')}\n            isOpen={state.menuSettings}\n            sidebarIsOpen={open}\n            name=\"trm.menu.settings\"\n            icon={<SettingsIcon />}\n            dense={dense}\n        >\n            <MenuItemLink\n                to={`/forms`}\n                primaryText={translate(`resources.forms.name`, {\n                    smart_count: 2,\n                })}\n                leftIcon={<ChatBubbleOutlineIcon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n            />\n            <MenuItemLink\n                to={`/form_responses`}\n                primaryText={translate(`resources.form_responses.name`, {\n                    smart_count: 2,\n                })}\n                leftIcon={<CommentIcon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n            />\n            <MenuItemLink\n                to={`/semesters`}\n                primaryText={translate(`resources.semesters.name`, {\n                    smart_count: 2,\n                })}\n                leftIcon={<QueryBuilderIcon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n            />\n            <MenuItemLink\n                to={`/team_members`}\n                primaryText={translate(`resources.team_members.name`, {\n                    smart_count: 2,\n                })}\n                leftIcon={<PeopleOutlineIcon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n            />\n        </SubMenu>\n        {isXSmall && logout}\n      </React.Fragment>\n  )\n}\n\nexport default TRMMenu\n","import * as React from \"react\";\nimport { Layout } from 'react-admin';\n\nimport TRMAppBar from './trmAppBar';\nimport TRMMenu from './trmMenu';\n\nconst TRMLayout = (props) => <Layout {...props} appBar={TRMAppBar} menu={TRMMenu} />;\n\nexport default TRMLayout;\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SelectField } from 'react-admin';\n\nexport const StateSelectField = ({ source, record = {}}) => {\n  return <SelectField source={source} record={record} choices={[\n    { id: 'PROSPECT', name: 'Prospect' },\n    { id: 'APPLICANT', name: 'Applicant' },\n    { id: 'REJECTED', name: 'Rejected' },\n    { id: 'LEARNER', name: 'Learner' },\n    { id: 'DROPPED', name: 'Dropped' },\n    { id: 'ALUMNI', name: 'Alumni' },\n  ]} />\n}\n\nStateSelectField.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nStateSelectField.defaultProps = {\n  addLabel: true\n}\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SelectInput } from 'react-admin';\n\nexport const StateSelectInput = ({ source, record = {}}) => {\n  return <SelectInput source={source} record={record} choices={[\n    { id: 'PROSPECT', name: 'Prospect' },\n    { id: 'APPLICANT', name: 'Applicant' },\n    { id: 'REJECTED', name: 'Rejected' },\n    { id: 'LEARNER', name: 'Learner' },\n    { id: 'DROPPED', name: 'Dropped' },\n    { id: 'ALUMNI', name: 'Alumni' },\n  ]} />\n}\n\nStateSelectInput.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SelectField } from 'react-admin';\n\nexport const TrackSelectField = ({ source, record = {}}) => {\n  return <SelectField source={source} record={record} choices={[\n    { id: 'DS', name: 'Data Science' },\n    { id: 'AI', name: 'Artificial Intelligence' },\n    { id: 'WEBDEV', name: 'Web Development' },\n    { id: 'UX', name: 'User Experience Design' },\n  ]} />\n}\n\nTrackSelectField.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nTrackSelectField.defaultProps = {\n  addLabel: true\n}\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SelectInput } from 'react-admin';\n\nexport const TrackSelectInput = ({ source, record = {}}) => {\n  return <SelectInput source={source} record={record} choices={[\n    { id: 'DS', name: 'Data Science' },\n    { id: 'AI', name: 'Artificial Intelligence' },\n    { id: 'WEBDEV', name: 'Web Development' },\n    { id: 'UX', name: 'User Experience Design' },\n  ]} />\n}\n\nTrackSelectInput.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nTrackSelectInput.defaultProps = {\n  addLabel: true\n}\n","import * as React from 'react';\nimport { Fragment, useState } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport MuiButton from '@material-ui/core/Button';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport { StateSelectInput} from '../../inputs/stateSelect'\nimport { FormSpy } from 'react-final-form';\nimport {\n    Button,\n    useUpdateMany,\n    useRefresh,\n    useNotify,\n    useUnselectAll,\n    SimpleForm\n} from 'react-admin';\n\nconst BulkUpdateTechieStateButton = ({ selectedIds }) => {\n    const [open, setOpen] = useState(false);\n    const [techieState, setTechieState] = useState(null);\n    const refresh = useRefresh();\n    const notify = useNotify();\n    const unselectAll = useUnselectAll();\n    const handleClick = () => setOpen(true);\n    const handleDialogClose = () => setOpen(false);\n    const [updateMany] = useUpdateMany(\n        'techies',\n        selectedIds,\n        {state: techieState},\n        {\n            onSuccess: () => {\n                refresh();\n                notify('Techies updated');\n                unselectAll('techies');\n            },\n            onFailure: error => notify('Error: techies not updated', 'warning'),\n        }\n    );\n\n    const handleConfirm = () => {\n        if(!techieState) {\n            notify('Select a state first', 'warning')\n            return\n        }\n        updateMany()\n        setOpen(false);\n    };\n\n    return (\n        <Fragment>\n            <Button label=\"Update State\" onClick={handleClick}>\n                <AutorenewIcon />\n            </Button>\n            <Dialog onClose={handleDialogClose} open={open}>\n                <DialogTitle>Update Techie States</DialogTitle>\n                <DialogContent>\n                    <SimpleForm record={{state: techieState}} toolbar={null}>\n                        <StateSelectInput source=\"state\" />\n                        <FormSpy onChange={props => setTechieState(props.values.state)} />\n                    </SimpleForm>\n                </DialogContent>\n                <DialogActions>\n                    <MuiButton onClick={handleDialogClose} color=\"primary\">\n                        Cancel\n                    </MuiButton>\n                    <MuiButton onClick={handleConfirm} color=\"primary\">\n                        Update\n                    </MuiButton>\n                </DialogActions>\n            </Dialog>\n        </Fragment>\n    );\n}\n\nexport default BulkUpdateTechieStateButton;\n","import * as React from 'react';\nimport { Fragment, useState } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport MuiButton from '@material-ui/core/Button';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport { FormSpy } from 'react-final-form';\nimport {\n    Button,\n    useUpdateMany,\n    useRefresh,\n    useNotify,\n    useUnselectAll,\n    SimpleForm,\n    ReferenceInput,\n    SelectInput\n} from 'react-admin';\n\nconst BulkUpdateAssignedTeamMemberButton = ({ selectedIds }) => {\n    const [open, setOpen] = useState(false);\n    const [assignedTeamMemberID, setAssignedTeamMemberID] = useState(null);\n    const refresh = useRefresh();\n    const notify = useNotify();\n    const unselectAll = useUnselectAll();\n    const handleClick = () => setOpen(true);\n    const handleDialogClose = () => setOpen(false);\n    const [updateMany] = useUpdateMany(\n        'techies',\n        selectedIds,\n        {assigned_team_member_id: assignedTeamMemberID},\n        {\n            onSuccess: () => {\n                refresh();\n                notify('Techies updated');\n                unselectAll('techies');\n            },\n            onFailure: error => notify('Error: techies not updated', 'warning'),\n        }\n    );\n\n    const handleConfirm = () => {\n        if(!assignedTeamMemberID) {\n            notify('Select a team member first', 'warning')\n            return\n        }\n        updateMany()\n        setOpen(false);\n    };\n\n    return (\n        <Fragment>\n            <Button label=\"Update Assigned Team Member\" onClick={handleClick}>\n              <PeopleOutlineIcon />\n            </Button>\n            <Dialog onClose={handleDialogClose} open={open}>\n                <DialogTitle>Update Techie States</DialogTitle>\n                <DialogContent>\n                    <SimpleForm record={{assignedTeamMemberID}} toolbar={null}>\n                      <ReferenceInput label=\"Assigned Team Member\" source=\"assignedTeamMemberID\" reference=\"team_members\">\n                          <SelectInput optionText={(record) => `${record.first_name} ${record.last_name}`} />\n                      </ReferenceInput>\n                      <FormSpy onChange={props => setAssignedTeamMemberID(props.values.assignedTeamMemberID)} />\n                    </SimpleForm>\n                </DialogContent>\n                <DialogActions>\n                    <MuiButton onClick={handleDialogClose} color=\"primary\">\n                        Cancel\n                    </MuiButton>\n                    <MuiButton onClick={handleConfirm} color=\"primary\">\n                        Update\n                    </MuiButton>\n                </DialogActions>\n            </Dialog>\n        </Fragment>\n    );\n}\n\nexport default BulkUpdateAssignedTeamMemberButton;\n","import * as React from \"react\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nexport const FormResponseAnswersField = ({ record = {}}) => {\n  const sortedAnswers = Object.entries(record.answers)\n    .map(([key, answer]) => {return { key, ...answer }})\n    .sort((a, b) => {\n      if(typeof a.index === 'number' && typeof b.index === 'number') {\n        return a.index - b.index\n      }\n      return 0\n    })\n  return (\n    <List>\n      {sortedAnswers.map(({key, ...answer}) => {\n        let title = key\n        if(answer.title) {\n          title = <span>{answer.title} <i>({key})</i></span>\n        }\n\n        let text = answer.value\n        if(answer.type === 'text') {\n          text = answer.value.split('\\n').map((item, key) => {\n            return <React.Fragment key={key}>{item}<br/></React.Fragment>\n          })\n        } else if(answer.type === 'choices') {\n          text = <ul>{answer.value.map(v => <li>{v}</li>)}</ul>\n        } else if(answer.type === 'boolean') {\n          if(answer.value) {\n            text = 'True'\n          } else {\n            text = 'False'\n          }\n        } else if(answer.type === 'email') {\n          text = <a href={'mailto:'+answer.value}>{answer.value}</a>\n        } else if(answer.type === 'file_url') {\n          text = <a href={answer.value}>{answer.value}</a>\n        } else if(answer.type === 'url') {\n          text = <a href={answer.value}>{answer.value}</a>\n        }\n        return (\n          <ListItem key={key}>\n            <ListItemIcon>\n              <ArrowRightIcon />\n            </ListItemIcon>\n            <ListItemText primary={title} secondary={text} />\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n\nFormResponseAnswersField.defaultProps = {\n  addLabel: true\n}\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport { Fragment } from 'react';\nimport {\n  Filter,\n  List,\n  Datagrid,\n  TextField,\n  Edit,\n  TabbedForm,\n  FormTab,\n  ReferenceManyField,\n  TextInput,\n  SelectInput,\n  ReferenceInput,\n  NullableBooleanInput,\n  Toolbar,\n  SaveButton,\n  ReferenceField,\n  useDataProvider,\n  BooleanField,\n  NumberInput\n} from 'react-admin';\nimport { StateSelectField } from './fields/stateSelect'\nimport { StateSelectInput } from './inputs/stateSelect'\nimport { TrackSelectField } from './fields/trackSelect'\nimport { TrackSelectInput } from './inputs/trackSelect'\nimport BulkUpdateTechieStateButton from \"./components/buttons/bulkUpdateTechieState\";\nimport BulkUpdateAssignedTeamMemberButton from \"./components/buttons/bulkUpdateAssignedTeamMember\";\nimport { FormResponseAnswersField } from './fields/formResponseAnswers';\n\nconst TechieFilter = (props) => (\n  <Filter {...props}>\n      <TextInput label=\"Search\" source=\"techie_key\" alwaysOn />\n      <TextInput source=\"email\" />\n      <ReferenceInput label=\"Semester\" source=\"semester_id\" reference=\"semesters\">\n        <SelectInput  optionText=\"description\" />\n      </ReferenceInput>\n      <ReferenceInput label=\"Assigned Team Member\" source=\"assigned_team_member_id\" reference=\"team_members\">\n        <SelectInput optionText=\"first_name\" />\n      </ReferenceInput>\n      <StateSelectInput source=\"state\" />\n  </Filter>\n);\n\nconst TechieBulkActionButtons = props => (\n  <Fragment>\n    <BulkUpdateTechieStateButton {...props} />\n    <BulkUpdateAssignedTeamMemberButton {...props} />\n  </Fragment>\n)\n\nexport const TechieList = props => {\n    if(props.location.hash === '#applications') {\n      return (\n        <List {...props} bulkActionButtons={<TechieBulkActionButtons />} filters={<TechieFilter />} filter={{state: 'APPLICANT'}} perPage={25}>\n            <Datagrid rowClick=\"edit\">\n                <TextField source=\"first_name\" />\n                <TextField source=\"last_name\" />\n                <TrackSelectField source=\"application_track_choice\" />\n                <ReferenceField label=\"Assigned Team Member\" source=\"assigned_team_member_id\" reference=\"team_members\">\n                    <TextField source=\"first_name\" />\n                </ReferenceField>\n                <BooleanField source=\"application_successful\" />\n            </Datagrid>\n        </List>\n      )\n    } else if(props.location.hash === '#academy') {\n      return (\n        <List {...props} bulkActionButtons={<TechieBulkActionButtons />} filters={<TechieFilter />} filter={{state: 'LEARNER'}} perPage={25}>\n              <Datagrid rowClick=\"edit\">\n                  <TextField source=\"first_name\" />\n                  <TextField source=\"last_name\" />\n                  <TrackSelectField source=\"track\" />\n              </Datagrid>\n        </List>\n      )\n    } else {\n      return (\n        <List {...props} bulkActionButtons={<TechieBulkActionButtons />} filters={<TechieFilter />} perPage={25}>\n              <Datagrid rowClick=\"edit\">\n                  <StateSelectField source=\"state\" />\n                  <TextField source=\"first_name\" />\n                  <TextField source=\"last_name\" />\n                  <TrackSelectField source=\"track\" />\n              </Datagrid>\n        </List>\n      )\n    }\n};\n\nconst TechieEditToolbar = props => (\n  <Toolbar {...props} >\n      <SaveButton />\n  </Toolbar>\n);\n\nconst TechieTitle = ({ record }) => {\n  let title = ''\n  if(record && record.first_name && record.last_name) {\n    title = record.first_name + ' ' + record.last_name\n  } else if(record && record.techie_key) {\n    title = record.techie_key\n  } else if(record && record.id) {\n    title = record.id\n  }\n  return <span>Techie <strong>{title}</strong></span>;\n};\n\nexport const TechieEdit = props => {\n  const [applicationForm, setApplicationForm] = useState({answers: []})\n  const dataProvider = useDataProvider()\n  if(applicationForm.answers.length === 0) {\n    dataProvider.getManyReference('form_responses', { target: 'techie_id', id: props.id })\n                .then(({data}) => {\n                  const result = data.find(response => response.form.form_type === 'APPLICATION')\n                  if(result) {\n                    setApplicationForm(result)\n                  }\n                })\n  }\n\n  return (\n    <Edit title={<TechieTitle />} {...props}>\n        <TabbedForm toolbar={<TechieEditToolbar />}>\n            <FormTab label=\"Master Data\">\n              <ReferenceInput label=\"Semester\" source=\"semester_id\" reference=\"semesters\">\n                  <SelectInput optionText=\"description\" />\n              </ReferenceInput>\n              <StateSelectInput source=\"state\" />\n              <TextInput source=\"first_name\" />\n              <TextInput source=\"last_name\" />\n              <SelectInput source=\"gender\" allowEmpty={true} choices={[\n                { id: 'male', name: 'Male' },\n                { id: 'female', name: 'Female' }\n              ]} />\n              <NumberInput source=\"age\" />\n              <TextInput source=\"email\" />\n              <TextInput source=\"google_account\" />\n              <TextInput source=\"github_handle\" />\n              <TextInput source=\"edyoucated_handle\" />\n              <TextInput source=\"linkedin_profile_url\" />\n              <TextInput source=\"slack_member_id\" />\n              <TextField source=\"techie_key\" />\n            </FormTab>\n            <FormTab label=\"Application\">\n              <TrackSelectField source=\"application_track_choice\" />\n              <ReferenceInput label=\"Assigned Team Member\" source=\"assigned_team_member_id\" reference=\"team_members\">\n                  <SelectInput optionText={(record) => `${record.first_name} ${record.last_name}`} />\n              </ReferenceInput>\n              <NullableBooleanInput source=\"application_successful\" displayNull />\n              <TextInput multiline source=\"notes\" />\n              <FormResponseAnswersField record={applicationForm} label=\"Application Form\" />\n            </FormTab>\n            <FormTab label=\"Academy\">\n              <TrackSelectInput source=\"track\" />\n            </FormTab>\n            <FormTab label=\"Form Submissions\">\n              <ReferenceManyField label=\"Form Responses by Techie\" reference=\"form_responses\" target=\"techie_id\">\n                <Datagrid rowClick=\"show\">\n                  <TextField label=\"Form Description\" source=\"form.description\" />\n                  <TextField label=\"Submission created at\" source=\"created_at\" />\n                </Datagrid>\n              </ReferenceManyField>\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n  )\n};\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SelectField } from 'react-admin';\n\nexport const FormTypeSelectField = ({ source, record = {}}) => {\n  return <SelectField source={source} record={record} choices={[\n    { id: 'APPLICATION', name: 'Application Form' },\n    { id: 'PERSONALIZED', name: 'Personalized Form' },\n    { id: 'ANONYMOUS', name: 'Anonymous Form' },\n  ]} />\n}\n\nFormTypeSelectField.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nFormTypeSelectField.defaultProps = {\n  addLabel: true\n}\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nexport const RelativeTimeField = ({ source, record = {} }) => {\n  return <Moment fromNow>{record[source]}</Moment>\n}\n\nRelativeTimeField.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nRelativeTimeField.defaultProps = {\naddLabel: true\n}\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SelectInput } from 'react-admin';\n\nexport const FormTypeSelectInput = ({ source, record = {}}) => {\n  return <SelectInput source={source} record={record} choices={[\n    { id: 'APPLICATION', name: 'Application Form' },\n    { id: 'PERSONALIZED', name: 'Personalized Form' },\n    { id: 'ANONYMOUS', name: 'Anonymous Form' },\n  ]} />\n}\n\nFormTypeSelectInput.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nFormTypeSelectInput.defaultProps = {\n  addLabel: true\n}\n","import * as React from \"react\";\nimport { Filter, List, Datagrid, DateField, TextField, ReferenceManyField, ReferenceInput, Edit, SimpleForm, TextInput, SelectInput, Create } from 'react-admin';\nimport { FormTypeSelectField } from \"./fields/formTypeSelect\";\nimport { RelativeTimeField } from './fields/relativeTime'\nimport { FormTypeSelectInput } from \"./inputs/formTypeSelect\";\n\nconst FormFilter = (props) => (\n  <Filter {...props}>\n      <TextInput label=\"Search\" source=\"description\" alwaysOn />\n      <TextInput source=\"form_id\" />\n  </Filter>\n);\n\nexport const FormList = props => (\n    <List {...props} filters={<FormFilter />} perPage={25}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"typeform_id\" />\n            <FormTypeSelectField source=\"form_type\" />\n            <TextField source=\"description\" />\n        </Datagrid>\n    </List>\n);\n\nconst FormTitle = ({ record }) => {\n  let title = ''\n  if(record && record.description) {\n    title = record.description\n  } else if(record && record.id) {\n    title = record.id\n  }\n  return <span>Form <strong>{title}</strong></span>;\n};\n\nexport const FormEdit = props => (\n  <Edit title={<FormTitle />} {...props}>\n      <SimpleForm>\n          <ReferenceInput label=\"Semester\" source=\"semester_id\" reference=\"semesters\">\n              <SelectInput optionText=\"description\" />\n          </ReferenceInput>\n          <TextInput source=\"typeform_id\" />\n          <FormTypeSelectInput source=\"form_type\" />\n          <TextInput source=\"description\" />\n          <DateField source=\"webhook_installed_at\" showTime={true} />\n          <ReferenceManyField label=\"Form Responses\" reference=\"form_responses\" target=\"form_id\">\n              <Datagrid rowClick=\"show\">\n                <TextField source=\"techie.first_name\" />\n                <TextField source=\"techie.last_name\" />\n                <TextField label=\"Time\" source=\"created_at\" />\n                <RelativeTimeField label=\"Time ago\" source=\"created_at\" />\n              </Datagrid>\n            </ReferenceManyField>\n      </SimpleForm>\n  </Edit>\n);\n\nexport const FormCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n          <ReferenceInput label=\"Semester\" source=\"semester_id\" reference=\"semesters\">\n              <SelectInput optionText=\"description\" />\n          </ReferenceInput>\n          <TextInput source=\"typeform_id\" />\n          <FormTypeSelectInput source=\"form_type\" />\n          <TextInput source=\"description\" />\n      </SimpleForm>\n  </Create>\n);\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SelectField } from 'react-admin';\n\nexport const TermSelectField = ({ source, record = {}}) => {\n  return <SelectField source={source} record={record} choices={[\n    { id: '2020_01', name: '2020-01 (Summer)' },\n    { id: '2020_02', name: '2020-02 (Winter)' },\n    { id: '2021_01', name: '2021-01 (Summer)' },\n  ]} />\n}\n\nTermSelectField.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nTermSelectField.defaultProps = {\n  addLabel: true\n}\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SelectInput } from 'react-admin';\n\nexport const TermSelectInput = ({ source, record = {}}) => {\n  return <SelectInput source={source} record={record} choices={[\n    { id: '2020_01', name: '2020-01 (Summer)' },\n    { id: '2020_02', name: '2020-02 (Winter)' },\n    { id: '2021_01', name: '2021-01 (Summer)' },\n  ]} />\n}\n\nTermSelectInput.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nTermSelectInput.defaultProps = {\n  addLabel: true\n}\n","import * as React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  Edit,\n  SimpleForm,\n  TextInput,\n  DateInput,\n  Create\n} from 'react-admin';\nimport { TermSelectField } from \"./fields/termSelect\";\nimport { TermSelectInput } from \"./inputs/termSelect\";\n\nexport const SemesterList = props => (\n    <List {...props} perPage={25}>\n        <Datagrid rowClick=\"edit\">\n            <TermSelectField source=\"term\" />\n            <TextField source=\"description\" />\n        </Datagrid>\n    </List>\n);\n\nconst SemesterTitle = ({ record }) => {\n  if(record && record.description) {\n    return <span>Semester <strong>{record.description}</strong></span>\n  } else if(record && record.id) {\n    return <span>Semester <strong>{record.id}</strong></span>\n  }\n  return <span>Semester</span>;\n};\n\nexport const SemesterEdit = props => (\n  <Edit title={<SemesterTitle />} {...props}>\n      <SimpleForm>\n          <TermSelectInput source=\"term\" />\n          <TextInput source=\"description\" />\n          <DateInput source=\"starts_at\" />\n          <DateInput source=\"application_period_ends_at\" />\n          <DateInput source=\"academy_phase_ends_at\" />\n          <DateInput source=\"ends_at\" />\n      </SimpleForm>\n  </Edit>\n);\n\nexport const SemesterCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n          <TermSelectInput source=\"term\" />\n          <TextInput source=\"description\" />\n          <DateInput source=\"starts_at\" />\n          <DateInput source=\"application_period_ends_at\" />\n          <DateInput source=\"academy_phase_ends_at\" />\n          <DateInput source=\"ends_at\" />\n      </SimpleForm>\n  </Create>\n);\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport ReactJson from 'react-json-view'\n\nexport const JSONField = ({ source, record = {} }) => {\n  return <ReactJson\n    src={record[source]}\n    collapsed={2}\n    collapseStringsAfterLength={60}\n  />\n}\n\nJSONField.propTypes = {\n    label: PropTypes.string,\n    record: PropTypes.object,\n    source: PropTypes.string.isRequired,\n};\n\nJSONField.defaultProps = {\n  addLabel: true\n}\n","import * as React from \"react\";\nimport {\n    Filter,\n    List,\n    Datagrid,\n    TextField,\n    ReferenceInput,\n    ReferenceField,\n    SelectInput,\n    Show,\n    SimpleShowLayout,\n    TabbedForm,\n    FormTab,\n    DateField\n} from 'react-admin';\nimport { FormResponseAnswersField } from './fields/formResponseAnswers';\nimport { JSONField } from './fields/json'\nimport { RelativeTimeField } from './fields/relativeTime'\n\nconst FormResponseFilter = (props) => (\n  <Filter {...props}>\n      <ReferenceInput label=\"Form\" source=\"form_id\" reference=\"forms\">\n        <SelectInput  optionText=\"description\" />\n      </ReferenceInput>\n  </Filter>\n);\n\nexport const FormResponseList = props => (\n    <List {...props} filters={<FormResponseFilter />} perPage={25} sort={{ field: 'created_at', order: 'DESC' }}>\n        <Datagrid rowClick=\"show\">\n            <TextField source=\"form.description\" />\n            <TextField source=\"techie.first_name\" />\n            <TextField source=\"techie.last_name\" />\n            <RelativeTimeField source=\"created_at\" />\n        </Datagrid>\n    </List>\n);\n\nconst FormResponseTitle = ({ record }) => {\n    if(record && record.form && record.form.description) {\n      return <span>Form Response to Form <strong>{record.form.description}</strong></span>\n    } else if(record && record.id) {\n      return <span>Form Response <strong>{record.id}</strong></span>\n    }\n    return <span>Form Response</span>;\n};\n\nexport const FormResponseShow = props => (\n    <Show title={<FormResponseTitle /> } {...props}>\n      <SimpleShowLayout>\n        <TabbedForm toolbar={null}>\n            <FormTab label=\"Answers\">\n                <ReferenceField label=\"Form\" source=\"form_id\" reference=\"forms\">\n                    <TextField source=\"description\" />\n                </ReferenceField>\n                <DateField source=\"created_at\" showTime={true} />\n                <FormResponseAnswersField label=\"Answers\" />\n            </FormTab>\n            <FormTab label=\"Details\">\n                <TextField source=\"form_id\" />\n                <TextField source=\"techie_id\" />\n                <TextField source=\"typeform_response_token\" />\n                <JSONField source=\"answers\" />\n                <JSONField source=\"typeform_event\" />\n                <DateField source=\"created_at\" showTime={true}/>\n          </FormTab>\n        </TabbedForm>\n      </SimpleShowLayout>\n  </Show>\n);\n","import * as React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  Edit,\n  SimpleForm,\n  TextInput,\n  Create\n} from 'react-admin';\n\nexport const TeamMemberList = props => (\n    <List {...props} perPage={25}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"first_name\" />\n            <TextField source=\"last_name\" />\n            <TextField source=\"description\" />\n        </Datagrid>\n    </List>\n);\n\nconst TeamMemberTitle = ({ record }) => {\n  if(record && record.first_name && record.last_name) {\n    return <span>Team Member <strong>{record.first_name} {record.last_name}</strong></span>\n  } else if(record && record.id) {\n    return <span>Team Member <strong>{record.id}</strong></span>\n  }\n  return <span>Team Member</span>;\n};\n\nexport const TeamMemberEdit = props => (\n  <Edit title={<TeamMemberTitle />} {...props}>\n      <SimpleForm>\n          <TextInput source=\"first_name\" />\n          <TextInput source=\"last_name\" />\n          <TextInput source=\"email\" />\n          <TextInput source=\"description\" />\n      </SimpleForm>\n  </Edit>\n);\n\nexport const TeamMemberCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n          <TextInput source=\"first_name\" />\n          <TextInput source=\"last_name\" />\n          <TextInput source=\"email\" />\n          <TextInput source=\"description\" />\n      </SimpleForm>\n  </Create>\n);\n","import React, { Component } from 'react';\nimport { Admin, Resource } from 'react-admin';\n\nimport dataProvider from './dataProvider';\nimport authProvider from './authProvider';\nimport i18nProvider from './i18nProvider';\nimport customRoutes from './customRoutes'\nimport LoginPage from './login';\nimport { theme } from './theme';\nimport Layout from './components/trmLayout'\nimport { TechieList, TechieEdit } from './techies';\nimport { FormList, FormEdit, FormCreate } from './forms';\nimport { SemesterList, SemesterEdit, SemesterCreate } from './semesters';\nimport { FormResponseList, FormResponseShow } from './form_responses';\nimport { TeamMemberList, TeamMemberEdit, TeamMemberCreate } from './team_members';\n\nclass App extends Component {\n  render() {\n      return (\n          <Admin\n            dataProvider={dataProvider}\n            authProvider={authProvider}\n            i18nProvider={i18nProvider}\n            customRoutes={customRoutes}\n            loginPage={LoginPage}\n            theme={theme}\n            layout={Layout}\n          >\n            <Resource name=\"techies\" list={TechieList} edit={TechieEdit} />\n            <Resource name=\"forms\" list={FormList} edit={FormEdit} create={FormCreate} />\n            <Resource name=\"form_responses\" list={FormResponseList} show={FormResponseShow} />\n            <Resource name=\"semesters\" list={SemesterList} edit={SemesterEdit} create={SemesterCreate} />\n            <Resource name=\"team_members\" list={TeamMemberList} edit={TeamMemberEdit} create={TeamMemberCreate} />\n          </Admin>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'typeface-nunito-sans'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}