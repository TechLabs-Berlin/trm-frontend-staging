{"version":3,"sources":["config.js","dataProvider.js","authProvider.js","i18nProvider.js","static/techlabs-logo.svg","login.js","theme.js","static/techlabs-icon-white.svg","components/trmAppBar.js","components/trmSubMenu.js","components/trmMenu.js","components/trmLayout.js","fields/stateSelect.js","inputs/stateSelect.js","fields/trackSelect.js","inputs/trackSelect.js","components/buttons/bulkUpdateTechieState.js","components/buttons/bulkUpdateAssignedTeamMember.js","fields/formResponseAnswers.js","techies.js","fields/formTypeSelect.js","fields/relativeTime.js","inputs/formTypeSelect.js","forms.js","fields/termSelect.js","inputs/termSelect.js","semesters.js","fields/json.js","form_responses.js","team_members.js","App.js","serviceWorker.js","index.js"],"names":["clientId","hostedDomain","hasuraProvider","hasToken","localStorage","getItem","buildProvider","token","client","ApolloClient","headers","uri","config","buildFieldsCustom","type","res","buildFields","name","push","gqlTypes","buildQuery","buildQueryFactory","buildVariables","iR","buildGqlQuery","buildMetaArgs","buildArgs","buildApolloArgs","getResponseParser","buildHasuraProvider","a","Promise","reject","authProvider","login","code","request","Request","method","body","JSON","stringify","Headers","fetch","then","response","status","Error","statusText","json","setItem","logout","removeItem","resolve","checkAuth","args","checkError","err","console","log","getPermissions","role","messages","trm","menu","techies","applications","academy","settings","resources","fields","first_name","last_name","techie_key","application_track_choice","google_account","github_handle","edyoucated_handle","linkedin_profile_url","forms","form_id","imports_techies","form_responses","team_members","semesters","englishMessages","polyglotI18nProvider","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","id","className","d","_ref","svgRef","title","props","viewBox","ref","undefined","ForwardRef","forwardRef","LoginPaper","styled","Paper","padding","loginTheme","createMuiTheme","palette","background","default","GREY","typography","fontFamily","useStyles","makeStyles","root","width","position","left","top","transform","centeredBlock","centeredText","LoginPage","notify","useNotify","useLogin","classes","responseGoogle","error","ThemeProvider","theme","CssBaseline","Notification","elevation","alt","scope","responseType","onSuccess","onFailure","cookiePolicy","primary","main","overrides","RaMenuItemLink","borderLeft","active","MuiAppBar","colorSecondary","backgroundColor","height","logo","marginRight","flex","textOverflow","whiteSpace","overflow","spacer","TRMAppBar","AppBar","Typography","variant","color","icon","minWidth","spacing","sidebarIsOpen","paddingLeft","transition","sidebarIsClosed","TRMSubMenu","handleToggle","isOpen","children","dense","translate","useTranslate","header","MenuItem","button","onClick","ListItemIcon","Tooltip","placement","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","TRMMenu","onMenuClick","useState","menuTechies","menuSettings","state","setState","isXSmall","useMediaQuery","breakpoints","down","open","useSelector","admin","ui","sidebarOpen","MenuItemLink","to","primaryText","smart_count","leftIcon","exact","pathname","hash","TRMLayout","Layout","appBar","StateSelectField","record","SelectField","choices","defaultProps","addLabel","StateSelectInput","SelectInput","TrackSelectField","TrackSelectInput","BulkUpdateTechieStateButton","selectedIds","setOpen","techieState","setTechieState","refresh","useRefresh","unselectAll","useUnselectAll","handleDialogClose","useUpdateMany","updateMany","label","Dialog","onClose","DialogTitle","DialogContent","SimpleForm","toolbar","onChange","values","DialogActions","BulkUpdateAssignedTeamMemberButton","assignedTeamMemberID","setAssignedTeamMemberID","assigned_team_member_id","ReferenceInput","reference","optionText","FormResponseAnswersField","sortedAnswers","entries","answers","map","answer","sort","b","index","text","value","split","item","v","href","ListItem","ListItemText","secondary","TechieFilter","Filter","TextInput","alwaysOn","TechieBulkActionButtons","TechieList","location","bulkActionButtons","filters","filter","perPage","Datagrid","rowClick","TextField","ReferenceField","BooleanField","TechieEditToolbar","Toolbar","SaveButton","TechieTitle","TechieEdit","applicationForm","setApplicationForm","dataProvider","useDataProvider","getManyReference","result","data","find","form","form_type","Edit","TabbedForm","FormTab","allowEmpty","NumberInput","NullableBooleanInput","displayNull","multiline","ReferenceManyField","FormTypeSelectField","RelativeTimeField","fromNow","FormTypeSelectInput","FormFilter","FormList","FormTitle","description","FormEdit","DateField","showTime","FormCreate","Create","TermSelectField","TermSelectInput","SemesterList","SemesterTitle","SemesterEdit","DateInput","SemesterCreate","JSONField","src","collapsed","collapseStringsAfterLength","FormResponseFilter","FormResponseList","field","order","FormResponseTitle","FormResponseShow","Show","SimpleShowLayout","TeamMemberList","TeamMemberTitle","TeamMemberEdit","TeamMemberCreate","App","Admin","i18nProvider","loginPage","layout","Resource","list","edit","create","show","Component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.64fd842f.chunk.js","sourcesContent":["export default {\n  graphqlApiURL: 'https://trm-staging-hasura-xwaitoan6a-ew.a.run.app/v1/graphql',\n  authFnURL: 'https://europe-west3-techlabs-trm-test.cloudfunctions.net/trm-auth-staging',\n  oAuth: {\n    clientId: '982186032389-28u4o2ui0up26vtp6ajp4ce7kqd69p7v.apps.googleusercontent.com',\n    hostedDomain: 'techlabs.org'\n  }\n}\n","import ApolloClient from 'apollo-boost'\nimport buildHasuraProvider from 'ra-data-hasura-graphql/src'\n// import buildDataProvider from 'ra-data-hasura-graphql';\nimport {\n  buildQueryFactory\n} from 'ra-data-hasura-graphql/src/buildQuery';\nimport buildVariables from 'ra-data-hasura-graphql/src/buildVariables';\nimport {\n  buildGqlQuery,\n  buildFields,\n  buildMetaArgs,\n  buildArgs,\n  buildApolloArgs,\n} from 'ra-data-hasura-graphql/src/buildGqlQuery';\nimport getResponseParser from 'ra-data-hasura-graphql/src/getResponseParser';\nimport * as gqlTypes from 'graphql-ast-types-browser';\n\nimport config from './config'\n\nlet hasuraProvider = null\n\nconst hasToken = () => localStorage.getItem('token') !== null\n\nconst buildProvider = () => {\n  const token = localStorage.getItem('token')\n  const client = new ApolloClient({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    },\n    uri: config.graphqlApiURL,\n  })\n  const buildFieldsCustom = (type) => {\n    let res = buildFields(type);\n    if (type.name === 'form_responses') {\n        // here we add additional fields we want to query for apps.\n        // we are using the graphql-ast-types functions which is ast representation for graphql\n        res.push(\n            gqlTypes.field(\n                gqlTypes.name('form'),\n                null,\n                null,\n                null,\n                gqlTypes.selectionSet([\n                    gqlTypes.field(gqlTypes.name('form_type')),\n                    gqlTypes.field(gqlTypes.name('description')),\n                ])\n            )\n        );\n        res.push(\n          gqlTypes.field(\n              gqlTypes.name('techie'),\n              null,\n              null,\n              null,\n              gqlTypes.selectionSet([\n                  gqlTypes.field(gqlTypes.name('first_name')),\n                  gqlTypes.field(gqlTypes.name('last_name')),\n              ])\n          )\n      );\n    }\n    return res;\n  };\n  const buildGqlQueryCustom = (iR) =>\n    buildGqlQuery(\n      iR,\n      buildFieldsCustom,\n      buildMetaArgs,\n      buildArgs,\n      buildApolloArgs\n    );\n  const buildQuery = buildQueryFactory(\n    buildVariables,\n    buildGqlQueryCustom,\n    getResponseParser\n  );\n  return buildHasuraProvider({\n    client,\n    buildQuery\n  })\n}\n\nexport default async (...args) => {\n  if (hasuraProvider === null && hasToken()) {\n    hasuraProvider = await buildProvider()\n  }\n  if (hasuraProvider !== null) {\n    return hasuraProvider(...args)\n  }\n  return Promise.reject('not logged in')\n}\n","import config from './config'\n\nconst authProvider = {\n  login: ({ code }) =>  {\n      const request = new Request(config.authFnURL, {\n          method: 'POST',\n          body: JSON.stringify({ code }),\n          headers: new Headers({ 'Content-Type': 'application/json' }),\n      });\n      return fetch(request)\n          .then(response => {\n              if (response.status < 200 || response.status >= 300) {\n                  throw new Error(response.statusText);\n              }\n              return response.json();\n          })\n          .then(({ token }) => {\n              localStorage.setItem('token', token);\n          });\n  },\n  logout: () => {\n    localStorage.removeItem('token')\n    return Promise.resolve()\n  },\n  checkAuth: (args) => {\n    return localStorage.getItem('token') ? Promise.resolve() : Promise.reject()\n  },\n  checkError: (err) => {\n    console.log(`checkError: ${err}`)\n    return Promise.resolve()\n  },\n  getPermissions: () => {\n    const role = localStorage.getItem('permissions');\n    return role ? Promise.resolve(role) : Promise.reject();\n  }\n};\n\nexport default authProvider;\n","import englishMessages from 'ra-language-english';\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\n\nlet messages = {\n  trm: {\n    menu: {\n      techies: 'Techies',\n      applications: 'Applications',\n      academy: 'Academy',\n      settings: 'Settings'\n    }\n  },\n  resources: {\n    techies: {\n      name: 'Techie |||| Techies',\n      fields: {\n        first_name: 'First Name',\n        last_name: 'Last Name',\n        techie_key: 'Techie Key',\n        application_track_choice: 'Application Track Choice',\n        google_account: 'Google Account',\n        github_handle: 'GitHub Handle',\n        edyoucated_handle: 'edyoucated Handle',\n        linkedin_profile_url: 'LinkedIn Profile URL'\n      }\n    },\n    forms: {\n      name: 'Form |||| Forms',\n      fields: {\n        form_id: 'Typeform Form ID',\n        imports_techies: 'Imports Techies?'\n      }\n    },\n    form_responses: {\n      name: 'Form Response |||| Form Responses',\n      fields: {\n        'form.description': 'Form',\n        'techie.first_name': 'First Name',\n        'techie.last_name': 'Last Name'\n      }\n    },\n    team_members: {\n      name: 'Team Member |||| Team Members',\n      fields: {\n        first_name: 'First Name',\n        last_name: 'Last Name',\n      }\n    },\n    semesters: {\n      name: 'Semester |||| Semesters'\n    }\n  },\n  ...englishMessages\n};\n\nexport default polyglotI18nProvider(() => messages)\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#fb1d5c;}.cls-2{fill:#454545;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"title\", null, \"tl-logo\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_2\",\n  \"data-name\": \"Layer 2\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_1-2\",\n  \"data-name\": \"Layer 1\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  id: \"arrow\",\n  className: \"cls-1\",\n  d: \"M0,92.81V78A5.82,5.82,0,0,1,.84,75a6.61,6.61,0,0,1,2.74-2.39L33.73,56.9a40,40,0,0,1,8.54-3c-1.6-.4-3.11-.84-4.52-1.3a26.51,26.51,0,0,1-4-1.72L3.58,35.26A6.61,6.61,0,0,1,.84,32.87,5.83,5.83,0,0,1,0,29.8V15L65.77,49.7v8.38Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"point\",\n  className: \"cls-1\",\n  d: \"M75.4,88.33a13.29,13.29,0,0,1,.95-5,12.09,12.09,0,0,1,2.65-4,13.24,13.24,0,0,1,4-2.7,12.38,12.38,0,0,1,5-1,12.23,12.23,0,0,1,4.9,1,12.44,12.44,0,0,1,4,2.7,12.25,12.25,0,0,1,2.65,4,12.48,12.48,0,0,1,1,5,12.32,12.32,0,0,1-1,5,13.24,13.24,0,0,1-2.65,4,12.16,12.16,0,0,1-4,2.65,12.56,12.56,0,0,1-4.9,1,12.83,12.83,0,0,1-5-1,12.6,12.6,0,0,1-4-2.65,11.47,11.47,0,0,1-2.65-4A13.2,13.2,0,0,1,75.4,88.33Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M178,17.2H145.45V0h84.44V17.2H197.35v83.15H178Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M240.74,71.25c1.18,8.74,8.95,15,21.55,15,6.6,0,15.25-2.44,19.36-6.59l11.43,11C285.46,98.49,273,102.21,262,102.21c-24.92,0-39.73-15-39.73-37.7,0-21.5,14.95-37,38.41-37,24.19,0,39.29,14.63,36.51,43.73ZM280,56.77C278.86,47.59,271.53,43,261.27,43c-9.68,0-17.6,4.58-20.23,13.76Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M373.72,91.32c-8.36,8-17.16,11.18-27.86,11.18-21,0-38.41-12.33-38.41-37.42s17.45-37.41,38.41-37.41c10.26,0,18.18,2.87,26.1,10.46L360.67,49.74a22.27,22.27,0,0,0-14.52-5.59c-12,0-20.81,8.61-20.81,20.93,0,13.48,9.38,20.65,20.52,20.65,5.72,0,11.44-1.58,15.83-5.88Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M403.77,0V39.28c6.45-8.17,14.37-10.61,22.58-10.61,20.52,0,29.61,13.62,29.61,34.41v37.27H438.08V63.22c0-12.9-6.89-18.35-16.42-18.35-10.56,0-17.89,8.75-17.89,19.35v36.13H385.89V0Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-2\",\n  d: \"M495.26,0V82.86H548v17.49H475.9V0Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-2\",\n  d: \"M617.23,29.67h17.16v70.68H617.53L616.65,90c-4.11,8.31-15.4,12.33-23.46,12.47C571.78,102.64,556,89.74,556,64.94c0-24.37,16.57-37.13,37.68-37,9.68,0,18.91,4.45,23,11.47ZM573.84,64.94c0,13.48,9.53,21.5,21.4,21.5,28.15,0,28.15-42.86,0-42.86C583.37,43.58,573.84,51.47,573.84,64.94Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-2\",\n  d: \"M671.62.14V39.28C675.88,32,687.75,28,695.37,28c21.12,0,36.8,12.62,36.8,37,0,23.22-16,37-37.24,37-8.79,0-17.74-2.87-23.31-11.33l-1.17,9.75H653.74V.14Zm1.18,64.8c0,12.76,9.67,20.79,21,20.79,11.44,0,20.53-8.46,20.53-20.79,0-12.76-9.09-20.64-20.53-20.64C682.47,44.3,672.8,52.61,672.8,64.94Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-2\",\n  d: \"M792.72,48.45c-5.13-4.73-11-6.3-17.89-6.3-8.5,0-13.19,2.58-13.19,7s4.25,7.17,13.49,7.74c13.63.86,30.93,3.87,30.93,22.65,0,12.48-10.41,23.23-31.08,23.23-11.43,0-22.87-1.87-33.43-12.62l8.8-12.47c6.89,7,16.86,9.75,24.92,9.89,6.75.14,13.05-2.58,13.05-7.74,0-4.87-4.1-7.6-14.37-8.17-13.63-1-29.9-5.88-29.9-21.94,0-16.34,17.3-22.07,30.49-22.07,11.29,0,19.79,2.15,28.15,9.32Z\"\n})));\n\nvar SvgTechlabsLogo = function SvgTechlabsLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 806.06 102.79\",\n    ref: svgRef\n  }, props), _ref2, title === undefined ? _ref3 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTechlabsLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/techlabs-logo.60a82074.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from 'react';\nimport { useLogin, useNotify, Notification } from 'react-admin';\nimport { ThemeProvider, makeStyles, styled } from '@material-ui/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport GREY from '@material-ui/core/colors/grey';\nimport { GoogleLogin } from 'react-google-login';\n\nimport config from './config'\nimport { ReactComponent as TechLabsLogo } from './static/techlabs-logo.svg';\n\nconst LoginPaper = styled(Paper)({\n    padding: '30px',\n});\n\nexport const loginTheme = createMuiTheme({\n    palette: {\n      background: {\n        default: GREY[200]\n      }\n    },\n    typography: {\n        fontFamily: ['Nunito Sans', 'Helvetica', 'Arial', 'sans-serif']\n    }\n});\n\nconst useStyles = makeStyles({\n    root: {\n        width: '400px',\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        '-webkit-transform': 'translate(-50%, -50%)',\n        transform: 'translate(-50%, -50%)'\n    },\n    centeredBlock: {\n        'margin-left': 'auto',\n        'margin-right': 'auto'\n    },\n    centeredText: {\n        'text-align': 'center'\n    }\n});\n\n\nconst LoginPage = (props) => {\n    const notify = useNotify();\n    const login = useLogin();\n    const classes = useStyles(props);\n    const responseGoogle = (response) => {\n        if('code' in response) {\n            login({ code: response.code })\n            return\n        }\n        console.error(response)\n        notify('Sign in with Google failed')\n    }\n\n    return (\n        <ThemeProvider theme={loginTheme}>\n            <CssBaseline />\n            <Notification />\n            <div className={classes.root}>\n                <LoginPaper elevation={3} className={classes.centeredText}>\n                    <TechLabsLogo className={classes.centeredBlock} alt=\"TechLabs Logo\" />\n                    <h1 className={classes.centeredText}>Techie Relationship Management</h1>\n                    <GoogleLogin\n                        clientId={config.oAuth.clientId}\n                        hostedDomain={config.oAuth.hostedDomain}\n                        scope=\"profile email https://www.googleapis.com/auth/admin.directory.group.readonly\"\n                        responseType=\"code\"\n                        onSuccess={responseGoogle}\n                        onFailure={responseGoogle}\n                        cookiePolicy={'single_host_origin'}\n                    />\n                </LoginPaper>\n            </div>\n        </ThemeProvider>\n    );\n};\n\nexport default LoginPage;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#fb1d5c'\n    }\n  },\n  typography: {\n    fontFamily: ['Nunito Sans', 'Helvetica', 'Arial', 'sans-serif']\n  },\n  overrides: {\n    RaMenuItemLink: {\n        root: {\n            borderLeft: '3px solid #fff',\n        },\n        active: {\n            borderLeft: '3px solid #fb1d5c',\n        },\n    },\n    MuiAppBar: {\n      colorSecondary: {\n          backgroundColor: '#fb1d5c',\n      },\n    }\n  }\n});\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:none;}.cls-2{fill:#fff;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"title\", null, \"icon_symOnly_p\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_2\",\n  \"data-name\": \"Layer 2\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Ebene_1\",\n  \"data-name\": \"Ebene 1\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"icon_symOnly_p\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"bg\",\n  className: \"cls-1\",\n  width: 512,\n  height: 512\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"arrow\",\n  className: \"cls-2\",\n  d: \"M84.29,377.72V329a19.31,19.31,0,0,1,2.76-10.12c1.84-3.06,4.83-5.67,9-7.89l99.56-51.81a131.56,131.56,0,0,1,28.21-10c-5.29-1.3-10.27-2.76-15-4.29a86,86,0,0,1-13.33-5.67L96.1,187.71c-4.22-2.22-7.21-4.83-9-7.89a19.31,19.31,0,0,1-2.76-10.12V121L301.44,235.39v27.67Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"point\",\n  className: \"cls-2\",\n  d: \"M333.25,362.93a43.31,43.31,0,0,1,3.14-16.33,39.64,39.64,0,0,1,8.74-13.26,43.57,43.57,0,0,1,13.33-8.89,40.91,40.91,0,0,1,16.48-3.3,40.24,40.24,0,0,1,16.18,3.3,42.19,42.19,0,0,1,21.92,55,44.12,44.12,0,0,1-8.74,13.18,40.53,40.53,0,0,1-13.18,8.74,41.57,41.57,0,0,1-16.18,3.22,42.55,42.55,0,0,1-16.48-3.22,42,42,0,0,1-13.33-8.74,38.13,38.13,0,0,1-8.74-13.18A43.22,43.22,0,0,1,333.25,362.93Z\"\n}))));\n\nvar SvgTechlabsIconWhite = function SvgTechlabsIconWhite(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), _ref2, title === undefined ? _ref3 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTechlabsIconWhite, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/techlabs-icon-white.28fe6921.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from \"react\";\nimport { AppBar } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { ReactComponent as TechLabsIconWhite } from '../static/techlabs-icon-white.svg';\n\n\nconst useStyles = makeStyles({\n    logo: {\n        height: '30px',\n        marginRight: '0.5em'\n    },\n    title: {\n        flex: 1,\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n    spacer: {\n        flex: 1,\n    },\n});\n\nconst TRMAppBar = props => {\n    const classes = useStyles();\n    return (\n        <AppBar {...props}>\n            <TechLabsIconWhite className={classes.logo} />\n            <Typography\n                variant=\"h6\"\n                color=\"inherit\"\n                className={classes.title}\n                id=\"react-admin-title\"\n            />\n            <span className={classes.spacer} />\n        </AppBar>\n    );\n};\n\nexport default TRMAppBar;\n","import * as React from 'react';\nimport { Fragment } from 'react';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslate } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n    icon: { minWidth: theme.spacing(5) },\n    sidebarIsOpen: {\n        '& a': {\n            paddingLeft: theme.spacing(4),\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n        },\n    },\n    sidebarIsClosed: {\n        '& a': {\n            paddingLeft: theme.spacing(2),\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n        },\n    },\n}));\n\nconst TRMSubMenu = ({\n    handleToggle,\n    sidebarIsOpen,\n    isOpen,\n    name,\n    icon,\n    children,\n    dense,\n}) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n\n    const header = (\n        <MenuItem dense={dense} button onClick={handleToggle}>\n            <ListItemIcon className={classes.icon}>\n                {isOpen ? <ExpandMore /> : icon}\n            </ListItemIcon>\n            <Typography variant=\"inherit\" color=\"textSecondary\">\n                {translate(name)}\n            </Typography>\n        </MenuItem>\n    );\n\n    return (\n        <Fragment>\n            {sidebarIsOpen || isOpen ? (\n                header\n            ) : (\n                <Tooltip title={translate(name)} placement=\"right\">\n                    {header}\n                </Tooltip>\n            )}\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n                <List\n                    dense={dense}\n                    component=\"div\"\n                    disablePadding\n                    className={\n                        sidebarIsOpen\n                            ? classes.sidebarIsOpen\n                            : classes.sidebarIsClosed\n                    }\n                >\n                    {children}\n                </List>\n            </Collapse>\n        </Fragment>\n    );\n};\n\nexport default TRMSubMenu;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useMediaQuery } from '@material-ui/core';\nimport { useTranslate, MenuItemLink } from 'react-admin';\nimport UserIcon from '@material-ui/icons/People';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport SchoolIcon from '@material-ui/icons/School';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\n\nimport SubMenu from './trmSubMenu'\n\nconst TRMMenu = ({ onMenuClick, dense, logout }) => {\n  const [state, setState] = useState({\n      menuTechies: true,\n      menuSettings: false,\n  });\n  const translate = useTranslate();\n  const isXSmall = useMediaQuery((theme) =>\n      theme.breakpoints.down('xs')\n  );\n  const open = useSelector((state) => state.admin.ui.sidebarOpen);\n    useSelector((state) => state.theme); // force rerender on theme change\n  const handleToggle = (menu) => {\n      setState(state => ({ ...state, [menu]: !state[menu] }));\n  };\n  return (\n    <React.Fragment>\n        {' '}\n        <SubMenu\n            handleToggle={() => handleToggle('menuTechies')}\n            isOpen={state.menuTechies}\n            sidebarIsOpen={open}\n            name=\"trm.menu.techies\"\n            icon={<UserIcon />}\n            dense={dense}\n        >\n            <MenuItemLink\n                to={`/techies`}\n                primaryText={'All ' + translate(`resources.techies.name`, {\n                    smart_count: 2,\n                })}\n                leftIcon={<UserIcon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n                exact\n            />\n            <MenuItemLink\n                to={{pathname: `/techies`, hash: 'applications'}}\n                primaryText={translate('trm.menu.applications')}\n                leftIcon={<AssignmentTurnedInIcon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n                exact\n            />\n            <MenuItemLink\n                to={{pathname: `/techies`, hash: 'academy'}}\n                primaryText={translate('trm.menu.academy')}\n                leftIcon={<SchoolIcon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n                exact\n            />\n        </SubMenu>\n        <SubMenu\n            handleToggle={() => handleToggle('menuSettings')}\n            isOpen={state.menuSettings}\n            sidebarIsOpen={open}\n            name=\"trm.menu.settings\"\n            icon={<SettingsIcon />}\n            dense={dense}\n        >\n            <MenuItemLink\n                to={`/forms`}\n                primaryText={translate(`resources.forms.name`, {\n                    smart_count: 2,\n                })}\n                leftIcon={<ChatBubbleOutlineIcon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n            />\n            <MenuItemLink\n                to={`/form_responses`}\n                primaryText={translate(`resources.form_responses.name`, {\n                    smart_count: 2,\n                })}\n                leftIcon={<CommentIcon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n            />\n            <MenuItemLink\n                to={`/semesters`}\n                primaryText={translate(`resources.semesters.name`, {\n                    smart_count: 2,\n                })}\n                leftIcon={<QueryBuilderIcon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n            />\n            <MenuItemLink\n                to={`/team_members`}\n                primaryText={translate(`resources.team_members.name`, {\n                    smart_count: 2,\n                })}\n                leftIcon={<PeopleOutlineIcon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n            />\n        </SubMenu>\n        {isXSmall && logout}\n      </React.Fragment>\n  )\n}\n\nexport default TRMMenu\n","import * as React from \"react\";\nimport { Layout } from 'react-admin';\n\nimport TRMAppBar from './trmAppBar';\nimport TRMMenu from './trmMenu';\n\nconst TRMLayout = (props) => <Layout {...props} appBar={TRMAppBar} menu={TRMMenu} />;\n\nexport default TRMLayout;\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SelectField } from 'react-admin';\n\nexport const StateSelectField = ({ source, record = {}}) => {\n  return <SelectField source={source} record={record} choices={[\n    { id: 'PROSPECT', name: 'Prospect' },\n    { id: 'APPLICANT', name: 'Applicant' },\n    { id: 'REJECTED', name: 'Rejected' },\n    { id: 'LEARNER', name: 'Learner' },\n    { id: 'DROPPED', name: 'Dropped' },\n    { id: 'ALUMNI', name: 'Alumni' },\n  ]} />\n}\n\nStateSelectField.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nStateSelectField.defaultProps = {\n  addLabel: true\n}\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SelectInput } from 'react-admin';\n\nexport const StateSelectInput = ({ source, record = {}}) => {\n  return <SelectInput source={source} record={record} choices={[\n    { id: 'PROSPECT', name: 'Prospect' },\n    { id: 'APPLICANT', name: 'Applicant' },\n    { id: 'REJECTED', name: 'Rejected' },\n    { id: 'LEARNER', name: 'Learner' },\n    { id: 'DROPPED', name: 'Dropped' },\n    { id: 'ALUMNI', name: 'Alumni' },\n  ]} />\n}\n\nStateSelectInput.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SelectField } from 'react-admin';\n\nexport const TrackSelectField = ({ source, record = {}}) => {\n  return <SelectField source={source} record={record} choices={[\n    { id: 'DS', name: 'Data Science' },\n    { id: 'AI', name: 'Artificial Intelligence' },\n    { id: 'WEBDEV', name: 'Web Development' },\n    { id: 'UX', name: 'User Experience Design' },\n  ]} />\n}\n\nTrackSelectField.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nTrackSelectField.defaultProps = {\n  addLabel: true\n}\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SelectInput } from 'react-admin';\n\nexport const TrackSelectInput = ({ source, record = {}}) => {\n  return <SelectInput source={source} record={record} choices={[\n    { id: 'DS', name: 'Data Science' },\n    { id: 'AI', name: 'Artificial Intelligence' },\n    { id: 'WEBDEV', name: 'Web Development' },\n    { id: 'UX', name: 'User Experience Design' },\n  ]} />\n}\n\nTrackSelectInput.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nTrackSelectInput.defaultProps = {\n  addLabel: true\n}\n","import * as React from 'react';\nimport { Fragment, useState } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport MuiButton from '@material-ui/core/Button';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport { StateSelectInput} from '../../inputs/stateSelect'\nimport { FormSpy } from 'react-final-form';\nimport {\n    Button,\n    useUpdateMany,\n    useRefresh,\n    useNotify,\n    useUnselectAll,\n    SimpleForm\n} from 'react-admin';\n\nconst BulkUpdateTechieStateButton = ({ selectedIds }) => {\n    const [open, setOpen] = useState(false);\n    const [techieState, setTechieState] = useState(null);\n    const refresh = useRefresh();\n    const notify = useNotify();\n    const unselectAll = useUnselectAll();\n    const handleClick = () => setOpen(true);\n    const handleDialogClose = () => setOpen(false);\n    const [updateMany] = useUpdateMany(\n        'techies',\n        selectedIds,\n        {state: techieState},\n        {\n            onSuccess: () => {\n                refresh();\n                notify('Techies updated');\n                unselectAll('techies');\n            },\n            onFailure: error => notify('Error: techies not updated', 'warning'),\n        }\n    );\n\n    const handleConfirm = () => {\n        if(!techieState) {\n            notify('Select a state first', 'warning')\n            return\n        }\n        updateMany()\n        setOpen(false);\n    };\n\n    return (\n        <Fragment>\n            <Button label=\"Update State\" onClick={handleClick}>\n                <AutorenewIcon />\n            </Button>\n            <Dialog onClose={handleDialogClose} open={open}>\n                <DialogTitle>Update Techie States</DialogTitle>\n                <DialogContent>\n                    <SimpleForm record={{state: techieState}} toolbar={null}>\n                        <StateSelectInput source=\"state\" />\n                        <FormSpy onChange={props => setTechieState(props.values.state)} />\n                    </SimpleForm>\n                </DialogContent>\n                <DialogActions>\n                    <MuiButton onClick={handleDialogClose} color=\"primary\">\n                        Cancel\n                    </MuiButton>\n                    <MuiButton onClick={handleConfirm} color=\"primary\">\n                        Update\n                    </MuiButton>\n                </DialogActions>\n            </Dialog>\n        </Fragment>\n    );\n}\n\nexport default BulkUpdateTechieStateButton;\n","import * as React from 'react';\nimport { Fragment, useState } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport MuiButton from '@material-ui/core/Button';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport { FormSpy } from 'react-final-form';\nimport {\n    Button,\n    useUpdateMany,\n    useRefresh,\n    useNotify,\n    useUnselectAll,\n    SimpleForm,\n    ReferenceInput,\n    SelectInput\n} from 'react-admin';\n\nconst BulkUpdateAssignedTeamMemberButton = ({ selectedIds }) => {\n    const [open, setOpen] = useState(false);\n    const [assignedTeamMemberID, setAssignedTeamMemberID] = useState(null);\n    const refresh = useRefresh();\n    const notify = useNotify();\n    const unselectAll = useUnselectAll();\n    const handleClick = () => setOpen(true);\n    const handleDialogClose = () => setOpen(false);\n    const [updateMany] = useUpdateMany(\n        'techies',\n        selectedIds,\n        {assigned_team_member_id: assignedTeamMemberID},\n        {\n            onSuccess: () => {\n                refresh();\n                notify('Techies updated');\n                unselectAll('techies');\n            },\n            onFailure: error => notify('Error: techies not updated', 'warning'),\n        }\n    );\n\n    const handleConfirm = () => {\n        if(!assignedTeamMemberID) {\n            notify('Select a team member first', 'warning')\n            return\n        }\n        updateMany()\n        setOpen(false);\n    };\n\n    return (\n        <Fragment>\n            <Button label=\"Update Assigned Team Member\" onClick={handleClick}>\n              <PeopleOutlineIcon />\n            </Button>\n            <Dialog onClose={handleDialogClose} open={open}>\n                <DialogTitle>Update Techie States</DialogTitle>\n                <DialogContent>\n                    <SimpleForm record={{assignedTeamMemberID}} toolbar={null}>\n                      <ReferenceInput label=\"Assigned Team Member\" source=\"assignedTeamMemberID\" reference=\"team_members\">\n                          <SelectInput optionText={(record) => `${record.first_name} ${record.last_name}`} />\n                      </ReferenceInput>\n                      <FormSpy onChange={props => setAssignedTeamMemberID(props.values.assignedTeamMemberID)} />\n                    </SimpleForm>\n                </DialogContent>\n                <DialogActions>\n                    <MuiButton onClick={handleDialogClose} color=\"primary\">\n                        Cancel\n                    </MuiButton>\n                    <MuiButton onClick={handleConfirm} color=\"primary\">\n                        Update\n                    </MuiButton>\n                </DialogActions>\n            </Dialog>\n        </Fragment>\n    );\n}\n\nexport default BulkUpdateAssignedTeamMemberButton;\n","import * as React from \"react\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nexport const FormResponseAnswersField = ({ record = {}}) => {\n  const sortedAnswers = Object.entries(record.answers)\n    .map(([key, answer]) => {return { key, ...answer }})\n    .sort((a, b) => {\n      if(typeof a.index === 'number' && typeof b.index === 'number') {\n        return a.index - b.index\n      }\n      return 0\n    })\n  return (\n    <List>\n      {sortedAnswers.map(({key, ...answer}) => {\n        let title = key\n        if(answer.title) {\n          title = <span>{answer.title} <i>({key})</i></span>\n        }\n\n        let text = answer.value\n        if(answer.type === 'text') {\n          text = answer.value.split('\\n').map((item, key) => {\n            return <React.Fragment key={key}>{item}<br/></React.Fragment>\n          })\n        } else if(answer.type === 'choices') {\n          text = <ul>{answer.value.map(v => <li>{v}</li>)}</ul>\n        } else if(answer.type === 'boolean') {\n          if(answer.value) {\n            text = 'True'\n          } else {\n            text = 'False'\n          }\n        } else if(answer.type === 'email') {\n          text = <a href={'mailto:'+answer.value}>{answer.value}</a>\n        } else if(answer.type === 'file_url') {\n          text = <a href={answer.value}>{answer.value}</a>\n        } else if(answer.type === 'url') {\n          text = <a href={answer.value}>{answer.value}</a>\n        }\n        return (\n          <ListItem key={key}>\n            <ListItemIcon>\n              <ArrowRightIcon />\n            </ListItemIcon>\n            <ListItemText primary={title} secondary={text} />\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n\nFormResponseAnswersField.defaultProps = {\n  addLabel: true\n}\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport { Fragment } from 'react';\nimport {\n  Filter,\n  List,\n  Datagrid,\n  TextField,\n  Edit,\n  TabbedForm,\n  FormTab,\n  ReferenceManyField,\n  TextInput,\n  SelectInput,\n  ReferenceInput,\n  NullableBooleanInput,\n  Toolbar,\n  SaveButton,\n  ReferenceField,\n  useDataProvider,\n  BooleanField,\n  NumberInput\n} from 'react-admin';\nimport { StateSelectField } from './fields/stateSelect'\nimport { StateSelectInput } from './inputs/stateSelect'\nimport { TrackSelectField } from './fields/trackSelect'\nimport { TrackSelectInput } from './inputs/trackSelect'\nimport BulkUpdateTechieStateButton from \"./components/buttons/bulkUpdateTechieState\";\nimport BulkUpdateAssignedTeamMemberButton from \"./components/buttons/bulkUpdateAssignedTeamMember\";\nimport { FormResponseAnswersField } from './fields/formResponseAnswers';\n\nconst TechieFilter = (props) => (\n  <Filter {...props}>\n      <TextInput label=\"Search\" source=\"techie_key\" alwaysOn />\n      <TextInput source=\"email\" />\n      <ReferenceInput label=\"Semester\" source=\"semester_id\" reference=\"semesters\">\n        <SelectInput  optionText=\"description\" />\n      </ReferenceInput>\n      <ReferenceInput label=\"Assigned Team Member\" source=\"assigned_team_member_id\" reference=\"team_members\">\n        <SelectInput optionText=\"first_name\" />\n      </ReferenceInput>\n      <StateSelectInput source=\"state\" />\n  </Filter>\n);\n\nconst TechieBulkActionButtons = props => (\n  <Fragment>\n    <BulkUpdateTechieStateButton {...props} />\n    <BulkUpdateAssignedTeamMemberButton {...props} />\n  </Fragment>\n)\n\nexport const TechieList = props => {\n    if(props.location.hash === '#applications') {\n      return (\n        <List {...props} bulkActionButtons={<TechieBulkActionButtons />} filters={<TechieFilter />} filter={{state: 'APPLICANT'}} perPage={25}>\n            <Datagrid rowClick=\"edit\">\n                <TextField source=\"first_name\" />\n                <TextField source=\"last_name\" />\n                <TrackSelectField source=\"application_track_choice\" />\n                <ReferenceField label=\"Assigned Team Member\" source=\"assigned_team_member_id\" reference=\"team_members\">\n                    <TextField source=\"first_name\" />\n                </ReferenceField>\n                <BooleanField source=\"application_successful\" />\n            </Datagrid>\n        </List>\n      )\n    } else if(props.location.hash === '#academy') {\n      return (\n        <List {...props} bulkActionButtons={<TechieBulkActionButtons />} filters={<TechieFilter />} filter={{state: 'LEARNER'}} perPage={25}>\n              <Datagrid rowClick=\"edit\">\n                  <TextField source=\"first_name\" />\n                  <TextField source=\"last_name\" />\n                  <TrackSelectField source=\"track\" />\n              </Datagrid>\n        </List>\n      )\n    } else {\n      return (\n        <List {...props} bulkActionButtons={<TechieBulkActionButtons />} filters={<TechieFilter />} perPage={25}>\n              <Datagrid rowClick=\"edit\">\n                  <StateSelectField source=\"state\" />\n                  <TextField source=\"first_name\" />\n                  <TextField source=\"last_name\" />\n                  <TrackSelectField source=\"track\" />\n              </Datagrid>\n        </List>\n      )\n    }\n};\n\nconst TechieEditToolbar = props => (\n  <Toolbar {...props} >\n      <SaveButton />\n  </Toolbar>\n);\n\nconst TechieTitle = ({ record }) => {\n  let title = ''\n  if(record && record.first_name && record.last_name) {\n    title = record.first_name + ' ' + record.last_name\n  } else if(record && record.techie_key) {\n    title = record.techie_key\n  } else if(record && record.id) {\n    title = record.id\n  }\n  return <span>Techie <strong>{title}</strong></span>;\n};\n\nexport const TechieEdit = props => {\n  const [applicationForm, setApplicationForm] = useState({answers: []})\n  const dataProvider = useDataProvider()\n  if(applicationForm.answers.length === 0) {\n    dataProvider.getManyReference('form_responses', { target: 'techie_id', id: props.id })\n                .then(({data}) => {\n                  const result = data.find(response => response.form.form_type === 'APPLICATION')\n                  if(result) {\n                    setApplicationForm(result)\n                  }\n                })\n  }\n\n  return (\n    <Edit title={<TechieTitle />} {...props}>\n        <TabbedForm toolbar={<TechieEditToolbar />}>\n            <FormTab label=\"Master Data\">\n              <ReferenceInput label=\"Semester\" source=\"semester_id\" reference=\"semesters\">\n                  <SelectInput optionText=\"description\" />\n              </ReferenceInput>\n              <StateSelectInput source=\"state\" />\n              <TextInput source=\"first_name\" />\n              <TextInput source=\"last_name\" />\n              <SelectInput source=\"gender\" allowEmpty={true} choices={[\n                { id: 'male', name: 'Male' },\n                { id: 'female', name: 'Female' }\n              ]} />\n              <NumberInput source=\"age\" />\n              <TextInput source=\"email\" />\n              <TextInput source=\"google_account\" />\n              <TextInput source=\"github_handle\" />\n              <TextInput source=\"edyoucated_handle\" />\n              <TextInput source=\"linkedin_profile_url\" />\n              <TextField source=\"techie_key\" />\n            </FormTab>\n            <FormTab label=\"Application\">\n              <TrackSelectField source=\"application_track_choice\" />\n              <ReferenceInput label=\"Assigned Team Member\" source=\"assigned_team_member_id\" reference=\"team_members\">\n                  <SelectInput optionText={(record) => `${record.first_name} ${record.last_name}`} />\n              </ReferenceInput>\n              <NullableBooleanInput source=\"application_successful\" displayNull />\n              <TextInput multiline source=\"notes\" />\n              <FormResponseAnswersField record={applicationForm} label=\"Application Form\" />\n            </FormTab>\n            <FormTab label=\"Academy\">\n              <TrackSelectInput source=\"track\" />\n            </FormTab>\n            <FormTab label=\"Form Submissions\">\n              <ReferenceManyField label=\"Form Responses by Techie\" reference=\"form_responses\" target=\"techie_id\">\n                <Datagrid rowClick=\"show\">\n                  <TextField label=\"Form Description\" source=\"form.description\" />\n                  <TextField label=\"Submission created at\" source=\"created_at\" />\n                </Datagrid>\n              </ReferenceManyField>\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n  )\n};\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SelectField } from 'react-admin';\n\nexport const FormTypeSelectField = ({ source, record = {}}) => {\n  return <SelectField source={source} record={record} choices={[\n    { id: 'APPLICATION', name: 'Application Form' },\n    { id: 'PERSONALIZED', name: 'Personalized Form' },\n    { id: 'ANONYMOUS', name: 'Anonymous Form' },\n  ]} />\n}\n\nFormTypeSelectField.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nFormTypeSelectField.defaultProps = {\n  addLabel: true\n}\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nexport const RelativeTimeField = ({ source, record = {} }) => {\n  return <Moment fromNow>{record[source]}</Moment>\n}\n\nRelativeTimeField.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nRelativeTimeField.defaultProps = {\naddLabel: true\n}\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SelectInput } from 'react-admin';\n\nexport const FormTypeSelectInput = ({ source, record = {}}) => {\n  return <SelectInput source={source} record={record} choices={[\n    { id: 'APPLICATION', name: 'Application Form' },\n    { id: 'PERSONALIZED', name: 'Personalized Form' },\n    { id: 'ANONYMOUS', name: 'Anonymous Form' },\n  ]} />\n}\n\nFormTypeSelectInput.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nFormTypeSelectInput.defaultProps = {\n  addLabel: true\n}\n","import * as React from \"react\";\nimport { Filter, List, Datagrid, DateField, TextField, ReferenceManyField, ReferenceInput, Edit, SimpleForm, TextInput, SelectInput, Create } from 'react-admin';\nimport { FormTypeSelectField } from \"./fields/formTypeSelect\";\nimport { RelativeTimeField } from './fields/relativeTime'\nimport { FormTypeSelectInput } from \"./inputs/formTypeSelect\";\n\nconst FormFilter = (props) => (\n  <Filter {...props}>\n      <TextInput label=\"Search\" source=\"description\" alwaysOn />\n      <TextInput source=\"form_id\" />\n  </Filter>\n);\n\nexport const FormList = props => (\n    <List {...props} filters={<FormFilter />} perPage={25}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"typeform_id\" />\n            <FormTypeSelectField source=\"form_type\" />\n            <TextField source=\"description\" />\n        </Datagrid>\n    </List>\n);\n\nconst FormTitle = ({ record }) => {\n  let title = ''\n  if(record && record.description) {\n    title = record.description\n  } else if(record && record.id) {\n    title = record.id\n  }\n  return <span>Form <strong>{title}</strong></span>;\n};\n\nexport const FormEdit = props => (\n  <Edit title={<FormTitle />} {...props}>\n      <SimpleForm>\n          <ReferenceInput label=\"Semester\" source=\"semester_id\" reference=\"semesters\">\n              <SelectInput optionText=\"description\" />\n          </ReferenceInput>\n          <TextInput source=\"typeform_id\" />\n          <FormTypeSelectInput source=\"form_type\" />\n          <TextInput source=\"description\" />\n          <DateField source=\"webhook_installed_at\" showTime={true} />\n          <ReferenceManyField label=\"Form Responses\" reference=\"form_responses\" target=\"form_id\">\n              <Datagrid rowClick=\"show\">\n                <TextField source=\"techie.first_name\" />\n                <TextField source=\"techie.last_name\" />\n                <TextField label=\"Time\" source=\"created_at\" />\n                <RelativeTimeField label=\"Time ago\" source=\"created_at\" />\n              </Datagrid>\n            </ReferenceManyField>\n      </SimpleForm>\n  </Edit>\n);\n\nexport const FormCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n          <ReferenceInput label=\"Semester\" source=\"semester_id\" reference=\"semesters\">\n              <SelectInput optionText=\"description\" />\n          </ReferenceInput>\n          <TextInput source=\"typeform_id\" />\n          <FormTypeSelectInput source=\"form_type\" />\n          <TextInput source=\"description\" />\n      </SimpleForm>\n  </Create>\n);\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SelectField } from 'react-admin';\n\nexport const TermSelectField = ({ source, record = {}}) => {\n  return <SelectField source={source} record={record} choices={[\n    { id: '2020_01', name: '2020-01 (Summer)' },\n    { id: '2020_02', name: '2020-02 (Winter)' },\n    { id: '2021_01', name: '2021-01 (Summer)' },\n  ]} />\n}\n\nTermSelectField.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nTermSelectField.defaultProps = {\n  addLabel: true\n}\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SelectInput } from 'react-admin';\n\nexport const TermSelectInput = ({ source, record = {}}) => {\n  return <SelectInput source={source} record={record} choices={[\n    { id: '2020_01', name: '2020-01 (Summer)' },\n    { id: '2020_02', name: '2020-02 (Winter)' },\n    { id: '2021_01', name: '2021-01 (Summer)' },\n  ]} />\n}\n\nTermSelectInput.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nTermSelectInput.defaultProps = {\n  addLabel: true\n}\n","import * as React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  Edit,\n  SimpleForm,\n  TextInput,\n  DateInput,\n  Create\n} from 'react-admin';\nimport { TermSelectField } from \"./fields/termSelect\";\nimport { TermSelectInput } from \"./inputs/termSelect\";\n\nexport const SemesterList = props => (\n    <List {...props} perPage={25}>\n        <Datagrid rowClick=\"edit\">\n            <TermSelectField source=\"term\" />\n            <TextField source=\"description\" />\n        </Datagrid>\n    </List>\n);\n\nconst SemesterTitle = ({ record }) => {\n  if(record && record.description) {\n    return <span>Semester <strong>{record.description}</strong></span>\n  } else if(record && record.id) {\n    return <span>Semester <strong>{record.id}</strong></span>\n  }\n  return <span>Semester</span>;\n};\n\nexport const SemesterEdit = props => (\n  <Edit title={<SemesterTitle />} {...props}>\n      <SimpleForm>\n          <TermSelectInput source=\"term\" />\n          <TextInput source=\"description\" />\n          <DateInput source=\"starts_at\" />\n          <DateInput source=\"application_period_ends_at\" />\n          <DateInput source=\"academy_phase_ends_at\" />\n          <DateInput source=\"ends_at\" />\n      </SimpleForm>\n  </Edit>\n);\n\nexport const SemesterCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n          <TermSelectInput source=\"term\" />\n          <TextInput source=\"description\" />\n          <DateInput source=\"starts_at\" />\n          <DateInput source=\"application_period_ends_at\" />\n          <DateInput source=\"academy_phase_ends_at\" />\n          <DateInput source=\"ends_at\" />\n      </SimpleForm>\n  </Create>\n);\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport ReactJson from 'react-json-view'\n\nexport const JSONField = ({ source, record = {} }) => {\n  return <ReactJson\n    src={record[source]}\n    collapsed={2}\n    collapseStringsAfterLength={60}\n  />\n}\n\nJSONField.propTypes = {\n    label: PropTypes.string,\n    record: PropTypes.object,\n    source: PropTypes.string.isRequired,\n};\n\nJSONField.defaultProps = {\n  addLabel: true\n}\n","import * as React from \"react\";\nimport {\n    Filter,\n    List,\n    Datagrid,\n    TextField,\n    ReferenceInput,\n    ReferenceField,\n    SelectInput,\n    Show,\n    SimpleShowLayout,\n    TabbedForm,\n    FormTab,\n    DateField\n} from 'react-admin';\nimport { FormResponseAnswersField } from './fields/formResponseAnswers';\nimport { JSONField } from './fields/json'\nimport { RelativeTimeField } from './fields/relativeTime'\n\nconst FormResponseFilter = (props) => (\n  <Filter {...props}>\n      <ReferenceInput label=\"Form\" source=\"form_id\" reference=\"forms\">\n        <SelectInput  optionText=\"description\" />\n      </ReferenceInput>\n  </Filter>\n);\n\nexport const FormResponseList = props => (\n    <List {...props} filters={<FormResponseFilter />} perPage={25} sort={{ field: 'created_at', order: 'DESC' }}>\n        <Datagrid rowClick=\"show\">\n            <TextField source=\"form.description\" />\n            <TextField source=\"techie.first_name\" />\n            <TextField source=\"techie.last_name\" />\n            <RelativeTimeField source=\"created_at\" />\n        </Datagrid>\n    </List>\n);\n\nconst FormResponseTitle = ({ record }) => {\n    if(record && record.form && record.form.description) {\n      return <span>Form Response to Form <strong>{record.form.description}</strong></span>\n    } else if(record && record.id) {\n      return <span>Form Response <strong>{record.id}</strong></span>\n    }\n    return <span>Form Response</span>;\n};\n\nexport const FormResponseShow = props => (\n    <Show title={<FormResponseTitle /> } {...props}>\n      <SimpleShowLayout>\n        <TabbedForm toolbar={null}>\n            <FormTab label=\"Answers\">\n                <ReferenceField label=\"Form\" source=\"form_id\" reference=\"forms\">\n                    <TextField source=\"description\" />\n                </ReferenceField>\n                <DateField source=\"created_at\" showTime={true} />\n                <FormResponseAnswersField label=\"Answers\" />\n            </FormTab>\n            <FormTab label=\"Details\">\n                <TextField source=\"form_id\" />\n                <TextField source=\"techie_id\" />\n                <TextField source=\"typeform_response_token\" />\n                <JSONField source=\"answers\" />\n                <JSONField source=\"typeform_event\" />\n                <DateField source=\"created_at\" showTime={true}/>\n          </FormTab>\n        </TabbedForm>\n      </SimpleShowLayout>\n  </Show>\n);\n","import * as React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  Edit,\n  SimpleForm,\n  TextInput,\n  Create\n} from 'react-admin';\n\nexport const TeamMemberList = props => (\n    <List {...props} perPage={25}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"first_name\" />\n            <TextField source=\"last_name\" />\n            <TextField source=\"description\" />\n        </Datagrid>\n    </List>\n);\n\nconst TeamMemberTitle = ({ record }) => {\n  if(record && record.first_name && record.last_name) {\n    return <span>Team Member <strong>{record.first_name} {record.last_name}</strong></span>\n  } else if(record && record.id) {\n    return <span>Team Member <strong>{record.id}</strong></span>\n  }\n  return <span>Team Member</span>;\n};\n\nexport const TeamMemberEdit = props => (\n  <Edit title={<TeamMemberTitle />} {...props}>\n      <SimpleForm>\n          <TextInput source=\"first_name\" />\n          <TextInput source=\"last_name\" />\n          <TextInput source=\"email\" />\n          <TextInput source=\"description\" />\n      </SimpleForm>\n  </Edit>\n);\n\nexport const TeamMemberCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n          <TextInput source=\"first_name\" />\n          <TextInput source=\"last_name\" />\n          <TextInput source=\"email\" />\n          <TextInput source=\"description\" />\n      </SimpleForm>\n  </Create>\n);\n","import React, { Component } from 'react';\nimport { Admin, Resource } from 'react-admin';\n\nimport dataProvider from './dataProvider';\nimport authProvider from './authProvider';\nimport i18nProvider from './i18nProvider';\nimport LoginPage from './login';\nimport { theme } from './theme';\nimport Layout from './components/trmLayout'\nimport { TechieList, TechieEdit } from './techies';\nimport { FormList, FormEdit, FormCreate } from './forms';\nimport { SemesterList, SemesterEdit, SemesterCreate } from './semesters';\nimport { FormResponseList, FormResponseShow } from './form_responses';\nimport { TeamMemberList, TeamMemberEdit, TeamMemberCreate } from './team_members';\n\nclass App extends Component {\n  render() {\n      return (\n          <Admin\n            dataProvider={dataProvider}\n            authProvider={authProvider}\n            i18nProvider={i18nProvider}\n            loginPage={LoginPage}\n            theme={theme}\n            layout={Layout}\n          >\n            <Resource name=\"techies\" list={TechieList} edit={TechieEdit} />\n            <Resource name=\"forms\" list={FormList} edit={FormEdit} create={FormCreate} />\n            <Resource name=\"form_responses\" list={FormResponseList} show={FormResponseShow} />\n            <Resource name=\"semesters\" list={SemesterList} edit={SemesterEdit} create={SemesterCreate} />\n            <Resource name=\"team_members\" list={TeamMemberList} edit={TeamMemberEdit} create={TeamMemberCreate} />\n          </Admin>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'typeface-nunito-sans'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}